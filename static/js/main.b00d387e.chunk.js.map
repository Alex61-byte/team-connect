{"version":3,"sources":["components/Signup/Signup.jsx","components/Login/Login.jsx","components/WorkTimeImputer/WorkTimeImputer.jsx","components/MonthRequestWorkingTime/MonthRequestWorkingTime.jsx","components/Logout/Logout.jsx","components/Nav/Nav.jsx","images/logo.png","components/WorkTimeRenderer/WorkTimeRenderer.jsx","components/SetTodos/SetTodos.jsx","components/AdminTodoViewer/AdminTodoViewer.jsx","components/SetProject/SetProject.jsx","components/ExpencesInputer/ExpencesInputer.jsx","components/UserProfile/UserProfile.jsx","components/ExpencesRenderer/ExpencesRenderer.jsx","components/AdminDashboard/AdminDashboard.jsx","components/UserTodoViewer/UserTodoViewer.jsx","components/UserDasboard/UserDashboard.jsx","App.js","index.js"],"names":["db","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","getFirestore","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","nameRef","useState","error","setError","loading","setLoading","history","useHistory","auth","getAuth","e","a","preventDefault","userEmail","current","value","createUserWithEmailAndPassword","then","cred","user","email","updateProfile","currentUser","displayName","setDoc","doc","name","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Login","signInWithEmailAndPassword","sessionStorage","setItem","userName","getItem","console","log","getDocs","collection","querySnapshot","arr","empty","forEach","data","project","projectName","uid","WorkTimeImputer","openProject","setOpenProject","useEffect","GetProjects","actualMonth","setActualMonth","setProject","date","setdate","time","setTime","success","setSucces","workingTime","setTimeout","addDoc","month","Date","toLocaleString","split","docRef","target","reset","handleWorkingTimeSubmit","Select","onChange","map","item","dateformat","max","min","MonthRequestWorkingTime","close","header","csvData","onClick","style","textDecoration","color","headers","filename","Logout","signOut","removeItem","img","providerData","photoURL","Nav","setData","image","setImage","GetData","undefined","src","logo","alt","width","onAuthStateChanged","WorkTimeRenderer","showTable","setShowTable","selectedMonth","setSelectedMonth","dataHours","setDataHours","times","parseInt","Object","values","sum","i","length","Table","bordered","SetTodos","users","setSuccess","userTodo","setUserTodo","titleRef","textRef","dateRef","title","text","todoItem","todoTitle","todoText","todoDueDate","todoDone","placeholder","AdminTodoViewer","dataProp","setDataProp","handelChange","newData","todo","find","deleteDoc","htmlFor","checked","DeleteTodo","SetProject","projectRef","targetUser","setTargetUser","projectLister","q","query","ExpencesInputer","selectedType","setSelectedType","selectedDate","setSelectedDate","docIssuer","setDocIssuer","docNumber","setDocNumber","selectedProject","setSelectedProject","projectList","setProjectList","expenceValue","setExpenceValue","myExpences","projectExpences","expenceType","Number","docRef1","employee","docRef2","getProjects","setExpences","step","UserProfile","file","setFile","imgUrl","setImgUrl","catch","CardHeader","accept","files","storage","getStorage","storageRef","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","state","getDownloadURL","downloadURL","ExpencesRenderer","expences","totalExpences","setTotalExpences","total","totalNumber","issuer","number","GetExpences","AdminDashboard","showHours","setShowHours","showSetTodos","setShowSetTodos","showExpences","setShowExpences","otherUsersWorkingHours","setOtherUsersWorkingHours","setUsers","setMonth","setUser","showProfile","setShowProfile","showTodoViewer","setShowTodoViewer","setTodo","showSetProject","setShowSetProject","showTableWorkingHours","setShowTableWorkingHors","showImputer","setShowImputer","showExpencesTable","setShowExpencesTable","showExpencesInputer","setShowExpencesInputer","showExpencesSorter","setShowExpencesSorter","getUsers","backgroundImage","Logo","backgroundSize","Row","Col","sm","ShowData","use","mon","UserTodoViewer","todos","todoList","setTodoList","setId","done","setDone","todoRef","updateDoc","Header","Footer","updateTodo","UserDashboard","showLogo","setShowLogo","showTodos","setShowTodos","setTodos","getTodos","App","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"kgBA0BMA,GAdcC,YAAc,CAE9BC,OAAQC,0CACRC,WAAYD,mCACZE,UAAWF,mBACXG,cAAeH,+BACfI,kBAAmBJ,+cAAYK,uCAC/BC,MAAON,4CACPO,cAAeP,+cAAYQ,oCAMpBC,eAGI,SAASC,IACpB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACrBG,EAAUH,mBAEhB,EAA0BI,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cACVC,EAAOC,cATgB,4CAc7B,WAA4BC,GAA5B,iBAAAC,EAAA,yDACID,EAAEE,iBAEIC,EAAYjB,EAASkB,QAAQC,MAE/BjB,EAAYgB,QAAQC,QAAUhB,EAAmBe,QAAQC,MALjE,yCAMeZ,EAAS,2BANxB,uBAgBQA,EAAS,IACTE,GAAW,GAjBnB,SAkBcW,YAA+BR,EAAMZ,EAASkB,QAAQC,MAAOjB,EAAYgB,QAAQC,OAClFE,MAAK,SAACC,GAAW,OAAOC,EAAOD,EAAKC,KAAKC,SAnBtD,wBAoBcC,YAAcb,EAAKc,YAAa,CAClCC,YAAavB,EAAQc,QAAQC,QArBzC,yBAyBcS,YAAOC,YAAI3C,EAAI,QAASqC,GAAO,CACjCO,KAAM1B,EAAQc,QAAQC,MACtBK,MAAOxB,EAASkB,QAAQC,QA3BpC,0DAoCQZ,EAAS,+BApCjB,QAsCsB,gCAAdU,GAAyD,2BAAZA,EAC7CP,EAAQqB,KAAK,mBAEbrB,EAAQqB,KAAK,kBAIjBtB,GAAW,GA7Cf,2DAd6B,sBAkE7B,OACI,qCACI,cAACuB,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIC,UAAU,mBAAd,qBACC5B,GAAS,cAAC6B,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyB9B,IACnC,eAAC+B,EAAA,EAAD,CAAMC,SAxEO,4CAwEb,UAEI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAK5C,EAAU6C,UAAQ,OAEtD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAK1C,EAAa2C,UAAQ,OAE5D,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,mBAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKzC,EAAoB0C,UAAQ,OAEnE,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,OAAf,UACI,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,IAAKxC,EAASyC,UAAQ,OAIpD,cAACC,EAAA,EAAD,CAAQC,SAAUvC,EAAS0B,UAAU,QAAQS,KAAK,SAAlD,6BAMZ,sBAAKT,UAAU,yBAAf,sCAC6B,cAAC,IAAD,CAAMc,GAAG,IAAT,0BCpH1B,SAASC,IACpB,IAAMjD,EAAWC,mBACXC,EAAcD,mBACpB,EAA0BI,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cACVC,EAAOC,cANe,4CAU5B,WAA4BC,GAA5B,eAAAC,EAAA,6DACID,EAAEE,iBADN,SAKQT,EAAS,IACTE,GAAW,GANnB,SAQcyC,YAA2BtC,EAAMZ,EAASkB,QAAQC,MAAOjB,EAAYgB,QAAQC,OAC9EE,KAAK8B,eAAeC,QAAQ,OAAQpD,EAASkB,QAAQC,QATlE,OAUckC,EAAWF,eAAeG,QAAQ,QACxCC,QAAQC,IAAIH,GACK,gCAAbA,GAA2D,2BAAbA,EAC9C3C,EAAQqB,KAAK,mBAEbrB,EAAQqB,KAAK,kBAfzB,kDAqBQxB,EAAS,kCArBjB,QAiCIE,GAAW,GAjCf,2DAV4B,sBA+C5B,OACI,gCACI,cAACuB,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIC,UAAU,mBAAd,qBACC5B,GAAS,cAAC6B,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyB9B,IACnC,eAAC+B,EAAA,EAAD,CAAMC,SArDM,4CAqDZ,UAEI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAK5C,EAAU6C,UAAQ,OAEtD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAK1C,EAAa2C,UAAQ,OAG5D,cAACC,EAAA,EAAD,CAAQC,SAAUvC,EAAS0B,UAAU,QAAQS,KAAK,SAAlD,6BAMZ,sBAAKT,UAAU,yBAAf,wCAC+B,cAAC,IAAD,CAAMc,GAAG,UAAT,2B,IChEvCK,E,iBAREnE,G,YAAKY,e,4CAWX,kCAAAiB,EAAA,6DAGUH,EAAOC,eACPU,EAAOX,EAAKc,eAGd2B,EAAW9B,EAAKC,OAPxB,SAegCiC,YAAQC,YAAWxE,EAAI,UAAW,OAAQmE,IAf1E,cAeUM,EAfV,OAiBQC,EAAM,IACkB,IAAxBD,EAAcE,MAEdF,EAAcG,SAAQ,SAACjC,GAEnB0B,QAAQC,IAAI3B,EAAIW,GAAI,OAAQX,EAAIkC,OAAOC,SACvCJ,EAAI7B,KAAK,CAAES,GAAIX,EAAIW,GAAIwB,QAASnC,EAAIkC,OAAOE,cAC3CV,QAAQC,IAAII,OAShBA,EAAI7B,KAAK,CAAES,GAAI,EAAGwB,QAAS,yBAE3BT,QAAQC,IAAII,IAnCpB,kBAwCWA,GAxCX,4C,sBAgDA,IAAMM,EAAMf,eAAeG,QAAQ,QAKpB,SAASa,IACpB,IAeA,EAAsC9D,mBAAS,IAA/C,mBAAO+D,EAAP,KAAoBC,EAApB,KACAd,QAAQC,IAAIY,GAEZE,qBAAU,Y,2CACNC,GACKlD,MAAK,SAACuC,GAAD,OAASS,EAAeT,QACpC,IAIF,MAAsCvD,qBAAtC,mBAAOmE,EAAP,KAAoBC,EAApB,KACAlB,QAAQC,IAAIgB,GACZ,MAA8BnE,qBAA9B,mBAAO2D,EAAP,KAAgBU,EAAhB,KAGA,EAAwBrE,qBAAxB,mBAAOsE,EAAP,KAAaC,EAAb,KACArB,QAAQC,IAAImB,GACZ,MAAwBtE,qBAAxB,mBAAOwE,EAAP,KAAaC,EAAb,KACA,EAA0BzE,mBAAS,IAAnC,mBAAO0E,EAAP,KAAeC,EAAf,KACA,EAAuB3E,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAnCsC,4CA2CtC,WAAuCO,GAAvC,qBAAAC,EAAA,yDACID,EAAEE,iBACIJ,EAAOC,eACPU,EAAOX,EAAKc,eAGd2B,EAAW9B,EAAKC,OAUdyD,EAAcvB,YAAWxE,EAAI,gBAAiBsF,EAAanB,GAGjEE,QAAQC,IAAImB,GAEC,yBAAVX,EArBP,wBAsBOzD,EAAS,uBACT2E,YAAW,kBAAI3E,EAAS,MAAI,KAvBnC,sDA6B6B4E,YAAOF,EAAa,CACrCG,MAAO,CAAEZ,eACTR,QAAS,CAAEA,WACXW,KAAM,IAAIU,KAAKV,GAAMW,eAAe,SAASC,MAAM,KAAK,GACxDV,KAAM,CAAEA,UAjCpB,QA6BcW,EA7Bd,OAqCQjC,QAAQC,IAAIgC,GArCpB,mDAuCQjC,QAAQjD,MAAM,gBAAiBqE,EAAMX,EAASa,GAvCtD,QA0CAG,EAAU,0BACVE,YAAW,kBAAIF,EAAU,MAAI,MAC7BlE,EAAE2E,OAAOC,QA5CT,4DA3CsC,sBAyFtC,OACI,qBAAKxD,UAAU,0BAAf,SACI,eAACF,EAAA,EAAD,CAAME,UAAU,gBAAhB,UACK6C,GAAS,cAAC5C,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0B2C,IACnCzE,GAAO,cAAC6B,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyB9B,IACjC,eAAC+B,EAAA,EAAD,CAAMC,SAAU,SAACxB,GAAD,OA9FU,2CA8FH6E,CAAwB7E,IAAIoB,UAAU,oBAA7D,UACI,eAACG,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,oBACA,eAACJ,EAAA,EAAKuD,OAAN,CAAaC,SAAU,SAAC/E,GAAD,OAAO2D,EAAe3D,EAAE2E,OAAOtE,QAAQ0B,UAAQ,EAAtE,UACI,wBAAQ1B,MAAM,GAAd,0BAjGH,CACjB,CAAEqB,GAAI,EAAG4C,MAAO,WAChB,CAAE5C,GAAI,EAAG4C,MAAO,YAChB,CAAE5C,GAAI,EAAG4C,MAAO,SAChB,CAAE5C,GAAI,EAAG4C,MAAO,SAChB,CAAE5C,GAAI,EAAG4C,MAAO,OAChB,CAAE5C,GAAI,EAAG4C,MAAO,QAChB,CAAE5C,GAAI,EAAG4C,MAAO,QAChB,CAAE5C,GAAI,EAAG4C,MAAO,UAChB,CAAE5C,GAAI,EAAG4C,MAAO,aAChB,CAAE5C,GAAI,GAAI4C,MAAO,WACjB,CAAE5C,GAAI,GAAI4C,MAAO,YACjB,CAAE5C,GAAI,GAAI4C,MAAO,aAsFiBU,KAAI,SAACC,GACf,OAAO,wBAAsB5E,MAAO4E,EAAKX,MAAlC,SAA0CW,EAAKX,OAAlCW,EAAKvD,aAMrC,eAACH,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,sBACA,eAACJ,EAAA,EAAKuD,OAAN,CAAaC,SAAU,SAAC/E,GAAD,OAAO4D,EAAW5D,EAAE2E,OAAOtE,QAAQ0B,UAAQ,EAAlE,UACI,wBAAQ1B,MAAM,GAAd,8BACCiD,EAAY0B,KAAI,SAACC,GACd,OAAO,wBAAsB5E,MAAO4E,EAAK/B,QAAlC,SAA4C+B,EAAK/B,SAApC+B,EAAKvD,aAIrC,eAACH,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOqD,WAAW,aAAanD,UAAQ,EAACgD,SAAU,SAAC/E,GAAD,OAAO8D,EAAQ9D,EAAE2E,OAAOtE,aAEjG,eAACkB,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,SAASsD,IAAI,IAAIC,IAAI,IAAIrD,UAAQ,EAACgD,SAAU,SAAC/E,GAAD,OAAOgE,EAAQhE,EAAE2E,OAAOtE,aAE3F,cAAC2B,EAAA,EAAD,CAAQH,KAAK,SAAb,uCA5HpBY,QAAQC,IAAIU,G,kBClEG,SAASiC,EAAT,GAA+E,IAA5C5E,EAA2C,EAA3CA,KAAM6D,EAAqC,EAArCA,MAAO/B,EAA8B,EAA9BA,SAAUU,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,KAAMuB,EAAQ,EAARA,MAG3EC,EAAS,CAAC,OAAQ,UAAW,OAAQ,QAASxB,GAC9CyB,EACFvC,EAAK+B,KAAI,SAACC,GAAD,MAAU,CAACA,EAAKpB,KAAMoB,EAAK/B,QAAQA,QAAS+B,EAAKlB,KAAKA,SASnE,OALAtB,QAAQC,IAAI8C,GAMR,sBAAKpE,UAAU,kCAAf,UACI,wBAAQqE,QAASH,EAAOlE,UAAU,QAAlC,eACA,wBAAOA,UAAU,sBAAjB,UACI,gCACI,qBAAIA,UAAU,aAAd,UACI,sCACA,yCACA,2CAGR,kCACI,qBAAIA,UAAU,aAAd,UACI,6BAAKkD,IACL,6BAAK/B,IACL,6BAAK9B,OAGRwC,EAAK+B,KAAI,SAAC/B,GACP,OAAO,qBAAkB7B,UAAU,kBAA5B,UACH,6BAAK6B,EAAKY,OACV,6BAAKZ,EAAKC,QAAQA,UAClB,6BAAKD,EAAKc,KAAKA,SAHHd,EAAKvB,UAO7B,gCACI,qBAAIN,UAAU,kBAAd,UACI,6CAEA,oBAAIA,UAAU,mBAAd,SAAkC2C,YAK9C,wBAAQ3C,UAAU,oBAAlB,SACA,cAAC,UAAD,CAASsE,MAAO,CAACC,eAAe,OAAOC,MAAM,SAAU3C,KAAMuC,EAASK,QAASN,EAAQO,SAAU,gBAAgBxB,EAAjH,kC,YCtDRlB,EAAMf,eAAeG,QAAQ,UAElB,SAASuD,IACpB,IAAMnG,EAAUC,cAqBhB,OACI,sBAAM4F,QArBV,WAEIhD,QAAQC,IAAI,UACZ,IAAM5C,EAAOC,cAEbiG,YAAQlG,GAGRF,EAAQqB,KAAK,KACboB,eAAe4D,WAAW,UAC1B5D,eAAe4D,WAAW,YAC1B5D,eAAe4D,WAAW,QAC1BxD,QAAQC,IAAIU,IASZ,qB,UCnBJA,EACA8C,EACA3D,ECZW,MAA0B,iC,4DDgBzC,gCAAAtC,EAAA,6DACUH,EAAOC,cACPU,EAAOX,EAAKc,YACdkC,EAAI,GACRL,QAAQC,IAAII,GACRrC,IACAgC,QAAQC,IAAIjC,EAAKC,OACjB+B,QAAQC,IAAIjC,EAAK0F,cACjB/C,EAAM3C,EAAK2C,IACX8C,EAAMzF,EAAK2F,SACX7D,EAAW9B,EAAKI,YAChB4B,QAAQC,IAAIjC,EAAK2F,UACjB3D,QAAQC,IAAIwD,GACZzD,QAAQC,IAAIH,GACZE,QAAQC,IAAIU,GACZN,EAAI7B,KAAKmC,EAAI8C,EAAI3D,IAfzB,kBAwBWO,GAxBX,4C,sBA8Be,SAASuD,IACpB,MAAwB9G,mBAAS,IAAjC,mBAAO0D,EAAP,KAAaqD,EAAb,KACA,EAAuB/G,qBAAvB,mBAAOgH,EAAP,KAAaC,EAAb,KAUI,OATJ/D,QAAQC,IAAI6D,GACZ/C,qBAAU,Y,2CACNiD,GACKlG,MAAK,SAACuC,GACHwD,EAAQxD,EAAI,IACZ0D,EAAS1D,EAAI,eAIT4D,IAARR,GAA6B,OAARA,EAEjB,qBAAK9E,UAAU,2BAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,gBAAf,SAA+B,qBAAKuF,IAAKC,EAAMC,IAAI,OAAOC,MAAM,UAEhE,qBAAK1F,UAAU,SAAf,SACI,+BAGI,+BAAI,cAAC,IAAD,IAAJ,IAAsB6B,KACtB,+BAAI,cAAC,IAAD,IAAmB,cAAC8C,EAAD,iBAcvC,qBAAK3E,UAAU,2BAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,gBAAf,SAA+B,qBAAKuF,IAAKC,EAAMC,IAAI,OAAOC,MAAM,UAEhE,qBAAK1F,UAAU,SAAf,SACI,+BACI,qBAAKsE,MAAO,CAAEoB,MAAO,QAArB,SAA+B,qBAAM1F,UAAU,mBAAmBuF,IAAKJ,EAAOM,IAAI,OAAOC,MAAM,WAE/F,mCAAM7D,KACN,+BAAI,cAAC,IAAD,IAAmB,cAAC8C,EAAD,iB,IEhFnD/E,E,SADAb,G,OAAYkC,eAAeG,QAAQ,SAEjC1C,EAAOC,cACbgH,YAAmBjH,GAAM,SAACW,GAClBA,IAGAN,EAAYM,EAAKC,MACjBM,EAAKP,EAAKI,gBAwBH,SAASmG,IAEpB,MAAkCzH,oBAAS,GAA3C,mBAAO0H,EAAP,KAAkBC,EAAlB,KAgBA,EAA0C3H,qBAA1C,mBAAO4H,EAAP,KAAsBC,EAAtB,KACA,EAAoB7H,qBAApB,mBAAMwE,EAAN,KAAWC,EAAX,KACA,EAA8BzE,mBAAS,IAAvC,mBAAM8H,EAAN,KAAgBC,EAAhB,KApBuC,4CAsBvC,WAAwBtH,GAAxB,qBAAAC,EAAA,6DACID,EAAEE,iBACK9B,EAAKY,cAFhB,SAKiC2D,YAAQC,YAAWxE,EAAI,gBAAiB+I,EAAehH,IALxF,OAKW0C,EALX,OAMKJ,QAAQC,IAAIG,GACRC,EAAM,GACNyE,EAAQ,IAEc,IAAtB1E,EAAcE,MAElBF,EAAcG,SAAQ,SAACjC,GAEnB0B,QAAQC,IAAI3B,EAAIW,GAAI,OAAQX,EAAIkC,QAChCH,EAAI7B,KAAK,CAAES,GAAIX,EAAIW,GAAIqC,KAAMhD,EAAIkC,OAAOc,KAAMF,KAAK9C,EAAIkC,OAAOY,KAAMX,QAAQnC,EAAIkC,OAAOC,UACvFT,QAAQC,IAAII,GAEZyE,EAAMtG,KAAKuG,SAASC,OAAOC,OAAO3G,EAAIkC,OAAOc,QAC7CwD,EAAMvC,KAAI,SAACC,GAAD,OAAQA,KAGlB,IAFA,IAAI0C,EAAM,EAEDC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAC9BD,GAAOJ,EAAMK,GAEjBnF,QAAQC,IAAIiF,GACZ3D,EAAQ2D,GACRL,EAAaxE,GACbL,QAAQC,IAAII,OAMZkB,EAAQ,GACRlB,EAAI7B,KAAK,CAAES,GAAG,EAAEmC,KAAKsD,EAAcjE,QAAQ,CAACA,QAAQ,WAAWa,KAAK,CAACA,KAAK,uBAC1EuD,EAAaxE,GACbL,QAAQC,IAAII,IAGhBoE,GAAa,GAxClB,6CAtBuC,sBAsEvC,OACI,sBAAK9F,UAAU,2BAAf,UACI,cAACF,EAAA,EAAD,CAAME,UAAU,wBAAhB,SACA,eAACG,EAAA,EAAD,CAAOC,SAzEwB,4CAyEJJ,UAAU,6BAArC,UACI,cAACG,EAAA,EAAKI,MAAN,2BACA,eAACJ,EAAA,EAAKuD,OAAN,CAAaC,SAAU,SAAC/E,GAAD,OAAOoH,EAAiBpH,EAAE2E,OAAOtE,QAAQ0B,UAAQ,EAAxE,UACI,wBAAQ1B,MAAM,GAAd,0BAzEK,CACjB,CAAEqB,GAAI,EAAG4C,MAAO,WAChB,CAAE5C,GAAI,EAAG4C,MAAO,YAChB,CAAE5C,GAAI,EAAG4C,MAAO,SAChB,CAAE5C,GAAI,EAAG4C,MAAO,SAChB,CAAE5C,GAAI,EAAG4C,MAAO,OAChB,CAAE5C,GAAI,EAAG4C,MAAO,QAChB,CAAE5C,GAAI,EAAG4C,MAAO,QAChB,CAAE5C,GAAI,EAAG4C,MAAO,UAChB,CAAE5C,GAAI,EAAG4C,MAAO,aAChB,CAAE5C,GAAI,GAAI4C,MAAO,WACjB,CAAE5C,GAAI,GAAI4C,MAAO,YACjB,CAAE5C,GAAI,GAAI4C,MAAO,aA8DSU,KAAI,SAACC,GACf,OAAO,wBAAsB5E,MAAO4E,EAAKX,MAAlC,SAA0CW,EAAKX,OAAlCW,EAAKvD,UAGjC,cAACM,EAAA,EAAD,CAAQH,KAAK,SAAb,4BAIHoF,GAAa,eAACa,EAAA,EAAD,CAAOC,UAAQ,EAAf,UAEV,kCACI,+BACI,6BAAK5H,IACL,6BAAKgH,OAET,+BACI,sCACA,yCACA,oDAIR,gCACKE,EAAUrC,KAAI,SAACC,GACd,OAAQ,+BACE,6BAAKA,EAAKpB,OACV,6BAAKoB,EAAK/B,QAAQA,UAClB,6BAAK+B,EAAKlB,KAAKA,SAHRkB,EAAKvD,SAO5B,gCACI,+BACI,6BAAKV,IACL,kDAAqBmG,KACrB,6BAAKpD,e,cCpJd,SAASiE,EAAT,GAA4B,IAATC,EAAQ,EAARA,MAC9B,EAAuB1I,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA2BF,mBAAS,IAApC,mBAAO0E,EAAP,KAAeiE,EAAf,KACA,EAA6B3I,mBAAS,MAAtC,mBAAO4I,EAAP,KAAgBC,EAAhB,KACA3F,QAAQC,IAAIyF,GACZ,IAAME,EAASlJ,mBACTmJ,EAAQnJ,mBACRoJ,EAAQpJ,mBAPwB,4CAWtC,WAA2Ba,GAA3B,yBAAAC,EAAA,yDAEkB,OAAXkI,EAFP,gBAGQnI,EAAEE,iBACFT,EAAS,wBACT2E,YAAW,kBAAI3E,EAAS,MAAI,KALpC,8BAOQO,EAAEE,iBACAsI,EAAMH,EAASjI,QAAQC,MACvBoI,EAAKH,EAAQlI,QAAQC,MACrBwD,EAAK0E,EAAQnI,QAAQC,MACrBjC,EAAGY,cACH0J,EAAS9F,YAAWxE,EAAG,OAAO,OAAO+J,GAZ/C,oBAc2B9D,YAAOqE,EAAS,CAC/BC,UAAUH,EACVI,SAASH,EACTI,YAAYhF,EACZiF,UAAS,IAlBrB,QAccpE,EAdd,OAoBQjC,QAAQC,IAAIgC,GApBpB,2DAwBIwD,EAAW,wBACX9D,YAAW,kBAAI8D,EAAW,MAAI,KAC/BlI,EAAE2E,OAAOC,QA1BZ,4DAXsC,sBA0CtC,OACI,qBAAKxD,UAAU,kBAAf,SACI,eAACF,EAAA,EAAD,CAAME,UAAU,gBAAhB,UACK5B,GAAQ,cAAC6B,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyB9B,IACjCyE,GAAS,cAAC5C,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0B2C,IACpC,eAAC1C,EAAA,EAAD,CAAMC,SA/CoB,4CA+C1B,UACI,eAACD,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,8BACA,eAACJ,EAAA,EAAKuD,OAAN,CAAaC,SAAU,SAAC/E,GAAD,OAAKoI,EAAYpI,EAAE2E,OAAOtE,QAAjD,UACA,wBAAQA,MAAM,OAAd,0BACH4H,EAAMjD,KAAI,SAACvE,GACR,OAAO,wBAAsBJ,MAAOI,EAAKiB,GAAlC,SAAuCjB,EAAKO,MAA/BP,EAAKiB,aAM7B,eAACH,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,yBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,IAAKuG,EAAUU,YAAY,QAAQhH,UAAQ,OAEzE,eAACR,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,+BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,IAAKwG,EAASS,YAAY,cAAchH,UAAQ,OAE9E,eAACR,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOE,UAAQ,EAACD,IAAKyG,OAE5C,cAACvG,EAAA,EAAD,CAAQH,KAAK,SAAb,8B,6BCxEL,SAASmH,EAAT,GAA0C,IAAf/F,EAAc,EAAdA,KAAMxC,EAAQ,EAARA,KAC5C,EAAgClB,mBAAS,IAAzC,mBAAO0J,EAAP,KAAiBC,EAAjB,KACAzG,QAAQC,IAAIuG,GACZ,MAAoB1J,qBAApB,mBAAOmC,EAAP,UAKA,SAASyH,EAAazH,GAClB,IAAM0H,EAAO,YAAOnG,GACdoG,EAAOD,EAAQE,MAAK,SAAAD,GAAI,OAAIA,EAAK3H,KAAOA,KAC9C2H,EAAKP,UAAYO,EAAKP,SACtBI,EAAYE,GAEZ3G,QAAQC,IAAI0G,GAdoC,4CAiBpD,WAA0BpJ,GAA1B,eAAAC,EAAA,6DACU7B,EAAKY,cADf,SAEUuK,YAAUxI,YAAI3C,EAAI,OAAQ,OAAQqC,EAAMT,IAFlD,4CAjBoD,sBA0BpD,OAtBAyC,QAAQC,IAAIhB,GACZe,QAAQC,IAAIjC,GAiBZ+C,qBAAU,WACN0F,EAAYjG,KACb,CAACA,IAEa,OAAbgG,EAEI,8BACI,cAAC5H,EAAA,EAAD,CAAOC,QAAQ,OAAf,yBAMJ,qBAAKF,UAAU,kBAAf,SAIK6H,EAASjE,KAAI,SAAC/B,GACX,OAAa,OAATA,EACO,qBAAK7B,UAAU,aAAf,SACH,cAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUF,UAAU,aAAnC,yBAKG,sBAAKA,UAAU,YAAf,UAEH,6BAAK6B,EAAK0F,YACV,6BAAK1F,EAAK2F,WACV,oBAAGxH,UAAU,cAAb,sBAAqC6B,EAAK4F,eAC1C,uBAAOzH,UAAU,cAAcoI,QAAQ,OAAvC,oBACA,uBAAOpI,UAAU,YAAYS,KAAK,WAAWb,KAAMiC,EAAKvB,GAAIA,GAAIuB,EAAKvB,GAAI+H,QAASxG,EAAK6F,SAAU/D,SAAU,SAAC/E,GAAD,OAAOmJ,EAAanJ,EAAE2E,OAAOjD,OACxI,uBACA,yBAAQN,UAAU,yBAAyBM,GAAIuB,EAAKvB,GAAI+D,QAAS,SAACzF,GAAD,OAvDrC,2CAuD4C0J,CAAW1J,EAAE2E,OAAOjD,KAA5F,UAAiG,cAAC,IAAD,CAAiBN,UAAU,WAA5H,mBARmC6B,EAAKvB,S,OC/CrD,SAASiI,EAAT,GAA8B,IAAT1B,EAAQ,EAARA,MAC1B2B,EAAWzK,mBACjB,EAAiCI,qBAAjC,mBAAOsK,EAAP,KAAkBC,EAAlB,KAFwC,4CAKxC,WAA2B9J,GAA3B,uBAAAC,EAAA,6DACGD,EAAEE,iBACK9B,EAAGY,cACHmE,EAAYyG,EAAWxJ,QAAQC,MAC/B6C,EAAQN,YAAWxE,EAAG,UAAU,OAAOyL,GACvCE,EAAcnH,YAAWxE,EAAG,gBALtC,kBAO2BiG,YAAOnB,EAAQ,CAC9BC,YAAYA,IARxB,cAOcuB,EAPd,iBAU4BL,YAAO0F,EAAc,CACrC7G,QAAQC,IAXpB,eAaQV,QAAQC,IAAIgC,GAbpB,6GALwC,sBAyBxC,OAtBAjC,QAAQC,IAAImH,GAuBR,8BACI,cAAC3I,EAAA,EAAD,CAAME,UAAU,kBAAhB,SACI,eAACG,EAAA,EAAD,CAAMH,UAAU,kBAAkBI,SAAU,SAACxB,GAAD,OA5BhB,2CA4BqBsD,CAAYtD,IAA7D,UACI,eAACuB,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,0BACA,eAACJ,EAAA,EAAKuD,OAAN,CAAa/C,UAAQ,EAAEgD,SAAU,SAAC/E,GAAD,OAAK8J,EAAc9J,EAAE2E,OAAOtE,QAA7D,UACI,wBAAQA,MAAM,GAAd,kBACC4H,EAAMjD,KAAI,SAACC,GACR,OAAO,wBAAsB5E,MAAO4E,EAAKvD,GAAlC,SAAuCuD,EAAKjE,MAA/BiE,EAAKvD,aAKrC,eAACH,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,iCACA,cAACJ,EAAA,EAAKK,QAAN,CAAcmH,YAAY,eAAehH,UAAQ,EAACD,IAAK8H,OAE3D,cAAC5H,EAAA,EAAD,CAAQH,KAAK,SAAb,iC,ICxChBU,G,6CAHEnE,I,OAAGY,eAELgC,GAAKqB,eAAeG,QAAQ,YAE1B1C,GAAOC,c,8CAcb,gCAAAE,EAAA,6DAEU+J,EAAIC,YAAMrH,YAAWxE,GAAG,eAAemE,KACzCO,EAAI,GAHZ,SAIgCH,YAAQqH,GAJxC,cAKgC,KADtBnH,EAJV,QAKsBE,MAEdF,EAAcG,SAAQ,SAACjC,GAEnB0B,QAAQC,IAAI3B,EAAIW,GAAI,OAAQX,EAAIkC,QAChCH,EAAI7B,KAAK,CAAES,GAAIX,EAAIW,GAAIwB,QAASnC,EAAIkC,OAAOE,cAC3CV,QAAQC,IAAII,OAShBA,EAAI7B,KAAK,CAAES,GAAI,EAAGwB,QAAS,yBAE3BT,QAAQC,IAAII,IAtBpB,kBA2BWA,GA3BX,4C,sBAiCe,SAASoH,KACpB,IA2BA,EAAsC3K,mBAAS,MAA/C,mBAAM4H,EAAN,KAAoBC,EAApB,KACA,EAAoC7H,mBAAS,MAA7C,mBAAM4K,EAAN,KAAmBC,EAAnB,KACA,EAAoC7K,qBAApC,mBAAM8K,EAAN,KAAmBC,EAAnB,KAEA,EAA8B/K,qBAA9B,mBAAMgL,EAAN,KAAgBC,EAAhB,KACA,EAA8BjL,qBAA9B,mBAAMkL,EAAN,KAAgBC,EAAhB,KACA,EAA0CnL,mBAAS,MAAnD,mBAAMoL,EAAN,KAAsBC,EAAtB,KACA,EAAkCrL,mBAAS,IAA3C,mBAAMsL,EAAN,KAAkBC,EAAlB,KACA,EAAqCvL,qBAArC,mBAAOwL,EAAP,KAAoBC,EAApB,KACA,EAAsBzL,mBAAS,IAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAyBF,mBAAS,IAAlC,mBAAM0E,EAAN,KAAcC,EAAd,KAtCsC,4CA6CtC,WAA2BlE,GAA3B,qBAAAC,EAAA,yDACID,EAAEE,iBAKmB,yBAAlByK,GAA4D,OAAlBA,EANjD,uBAOSlL,EAAS,0BACX2E,YAAW,kBAAK3E,EAAS,MAAI,MARpC,6BAU6B,OAAhB0H,EAVb,wBAWQ1H,EAAS,qBACT2E,YAAW,kBAAI3E,EAAS,MAAI,MAZpC,kCAgBcwL,EAAWrI,YAAWxE,GAAG,WAAW+I,EAAc5E,IAClD2I,EAAgBtI,YAAWxE,GAAG,8BAA8BuM,GAjB1E,oBAqBgCtG,YAAO4G,EAAW,CAClCpH,KAAKwG,EACL/F,MAAM6C,EACNgE,YAAYhB,EACZI,UAAUA,EACVE,UAAUA,EACVpK,MAAM+K,OAAOL,GACb7H,QAAQyH,IA5BxB,eAqBkBU,EArBlB,OAgCY5I,QAAQC,IAAI2I,GAhCxB,UAiCgChH,YAAO6G,EAAgB,CACvCrH,KAAKwG,EACL/F,MAAM6C,EACNgE,YAAYhB,EACZI,UAAUA,EACVE,UAAUA,EACVpK,MAAM+K,OAAOL,GACbO,SAAStK,KAxCzB,QAiCkBuK,EAjClB,OA0CY9I,QAAQC,IAAI6I,GA1CxB,2DAmDInE,EAAiB,MACjBwD,EAAmB,MAEnB1G,EAAU,2BACVE,YAAW,kBAAIF,EAAU,MAAI,MAC7BlE,EAAE2E,OAAOC,QAxDb,4DA7CsC,sBA2GtC,OAnEApB,qBAAU,Y,4CACNgI,GACCjL,MAAK,SAACuC,GAAD,OAAOgI,EAAehI,QAC9B,IAiEE,qBAAK1B,UAAU,4CAAf,SACI,eAACF,EAAA,EAAD,CAAME,UAAU,uBAAhB,UACM5B,GAAS,cAAC6B,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyB9B,IAClCyE,GAAS,cAAC5C,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0B2C,IACrC,eAAC1C,EAAA,EAAD,CAAMC,SAAU,SAACxB,GAAD,OAhHU,2CAgHLyL,CAAYzL,IAAIoB,UAAU,wBAA/C,UACI,eAACG,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,2BACA,eAACJ,EAAA,EAAKuD,OAAN,CAAa/C,UAAQ,EAACgD,SAAU,SAAC/E,GAAD,OAAKoH,EAAiBpH,EAAE2E,OAAOtE,QAA/D,UACI,wBAAQA,MAAM,OAAd,0BAvGH,CACjB,CAAEqB,GAAI,EAAG4C,MAAO,WAChB,CAAE5C,GAAI,EAAG4C,MAAO,YAChB,CAAE5C,GAAI,EAAG4C,MAAO,SAChB,CAAE5C,GAAI,EAAG4C,MAAO,SAChB,CAAE5C,GAAI,EAAG4C,MAAO,OAChB,CAAE5C,GAAI,EAAG4C,MAAO,QAChB,CAAE5C,GAAI,EAAG4C,MAAO,QAChB,CAAE5C,GAAI,EAAG4C,MAAO,UAChB,CAAE5C,GAAI,EAAG4C,MAAO,aAChB,CAAE5C,GAAI,GAAI4C,MAAO,WACjB,CAAE5C,GAAI,GAAI4C,MAAO,YACjB,CAAE5C,GAAI,GAAI4C,MAAO,aA4FaU,KAAI,SAACC,GACf,OAAO,wBAAsB5E,MAAO4E,EAAKX,MAAlC,SAA0CW,EAAKX,OAAlCW,EAAKvD,aAIjC,eAACH,EAAA,EAAKE,MAAN,WACA,eAACF,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,6BACA,eAACJ,EAAA,EAAKuD,OAAN,CAAa/C,UAAQ,EAACgD,SAAU,SAAC/E,GAAD,OAAK4K,EAAmB5K,EAAE2E,OAAOtE,QAAQ0I,YAAY,mBAArF,UACI,wBAAQ1I,MAAM,uBAAd,kCACHwK,EAAY7F,KAAI,SAACC,GACd,OAAO,wBAAsB5E,MAAO4E,EAAK/B,QAAlC,SAA4C+B,EAAK/B,SAApC+B,EAAKvD,aAI7B,cAACH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOE,UAAQ,EAAEgD,SAAU,SAAC/E,GAAD,OAAKsK,EAAgBtK,EAAE2E,OAAOtE,aAEhF,eAACkB,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,2BACA,eAACJ,EAAA,EAAKuD,OAAN,CAAa/C,UAAQ,EAACgD,SAAU,SAAC/E,GAAD,OAAKoK,EAAgBpK,EAAE2E,OAAOtE,QAA9D,UACI,wBAAQA,MAAM,OAAd,iCAzID,CACnB,CAAEqB,GAAI,EAAGG,KAAM,SACf,CAAEH,GAAI,EAAGG,KAAM,QACf,CAAEH,GAAI,EAAGG,KAAM,YACf,CAAEH,GAAI,EAAGG,KAAM,iBACf,CAAEH,GAAI,EAAGG,KAAM,2BACf,CAAEH,GAAI,EAAGG,KAAM,WACf,CAAEH,GAAI,EAAGG,KAAM,eACf,CAAEH,GAAI,EAAGG,KAAM,iBACf,CAAEH,GAAI,EAAGG,KAAM,oBAiIqBmD,KAAI,SAACC,GACjB,OAAO,wBAAsB5E,MAAO4E,EAAKpD,KAAlC,SAAyCoD,EAAKpD,MAAjCoD,EAAKvD,aAIrC,eAACH,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,8BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOkH,YAAY,iBAAiBhE,SAAU,SAAC/E,GAAD,OAAKwK,EAAaxK,EAAE2E,OAAOtE,aAEhG,eAACkB,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,8BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOkH,YAAY,qBAAqBhE,SAAU,SAAC/E,GAAD,OAAK0K,EAAa1K,EAAE2E,OAAOtE,aAEpG,eAACkB,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,SAAS6J,KAAK,OAAO3C,YAAY,qBAAqBhE,SAAU,SAAC/E,GAAD,OAAKgL,EAAgBhL,EAAE2E,OAAOtE,aAErH,cAAC2B,EAAA,EAAD,CAAQH,KAAK,SAAb,+BA1MpBkF,YAAmBjH,IAAM,SAACW,GAClBA,IAGA8B,GAAW9B,EAAKC,U,oBCPT,SAASiL,GAAT,GAAiC,IAAVrG,EAAS,EAATA,MAElC,EAAwB/F,mBAAS,MAAjC,mBAAOqM,EAAP,KAAaC,EAAb,KACA,EAA4BtM,mBAAS,IAArC,mBAAOuM,EAAP,KAAeC,EAAf,KAEAtJ,QAAQC,IAAIkJ,GAL+B,4CAqD3C,4BAAA3L,EAAA,sDACUH,EAAOC,cACrBY,YAAcb,EAAKc,YAAa,CAC7BwF,SAAU0F,IACVvL,MAAK,eAGLyL,OAAM,SAACxM,OAPN,4CArD2C,sBAqE3C,OACI,qBAAK4B,UAAU,YAAf,SACI,eAACF,EAAA,EAAD,WACA,cAAC+K,GAAA,EAAD,CAAY7K,UAAU,eAAtB,SAAqC,kEAAoC,wBAAQA,UAAU,QAAQqE,QAASH,EAAnC,oBAGpE,eAAC/D,EAAA,EAAD,CAAMC,SA3EwB,2CA2E9B,UACG,eAACD,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,kCACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOqK,OAAO,kBAAkBnH,SAxElD,SAAA/E,GACbA,EAAE2E,OAAOwH,MAAM,IACfN,EAAQ7L,EAAE2E,OAAOwH,MAAM,IAE3B1J,QAAQC,IAAIkJ,MAqEI,cAAC5J,EAAA,EAAD,CAAQyD,QAlE5B,WACI,IAAM2G,EAAUC,cACVC,EAAaxK,YAAIsK,EAASR,EAAK5K,MAE/BuL,EAAaC,YAAqBF,EAAYV,GAMpDW,EAAWE,GAAG,iBACV,SAACC,GAGG,IAAMC,EAAYD,EAASE,iBAAmBF,EAASG,WAAc,IAErE,OADApK,QAAQC,IAAI,aAAeiK,EAAW,UAC9BD,EAASI,OACb,IAAK,SACDrK,QAAQC,IAAI,oBACZ,MACJ,IAAK,UACDD,QAAQC,IAAI,yBAIxB,SAAClD,OAGD,WAGIuN,YAAeR,EAAWG,SAAS5K,KAAKvB,MAAK,SAACyM,GAC1CvK,QAAQC,IAAI,oBAAqBsK,GACjCjB,EAAUiB,UAiCN,qCAEJ,cAAChL,EAAA,EAAD,CAAQH,KAAK,SAAb,kC,IChFhBb,GACAb,GCiBAa,G,SDnBE5C,I,OAAKY,gBAII,SAASiO,KAEpB,IAiBA,EAA0C1N,qBAA1C,mBAAO4H,EAAP,KAAsBC,EAAtB,KACA,EAAgC7H,mBAAS,IAAzC,mBAAO2N,EAAP,KAAiBzB,EAAjB,KACA,EAAkClM,oBAAS,GAA3C,mBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAA0C3H,qBAA1C,mBAAO4N,EAAP,KAAsBC,EAAtB,KAtBuC,4CAyBvC,WAA2BpN,GAA3B,yBAAAC,EAAA,6DACID,EAAEE,iBAEIJ,EAAOC,eACPU,EAAOX,EAAKc,eAGdT,GAAWM,EAAKC,MAChBM,GAAKP,EAAKI,aARlB,SAgBgC8B,aAAQC,aAAWxE,GAAI,WAAY+I,EAAehH,KAhBlF,cAgBU0C,EAhBV,OAiBQwK,EAAQ,GACRvK,EAAM,GACNwK,EAAc,IACU,IAAxBzK,EAAcE,MAEdF,EAAcG,SAAQ,SAACjC,GAEnB0B,QAAQC,IAAI3B,EAAIW,GAAI,OAAQX,EAAIkC,QAChCH,EAAI7B,KAAK,CAAES,GAAIX,EAAIW,GAAIwB,QAASnC,EAAIkC,OAAOC,QAASoB,MAAOvD,EAAIkC,OAAOqB,MAAOT,KAAM9C,EAAIkC,OAAOY,KAAM0J,OAAQxM,EAAIkC,OAAOsH,UAAWiD,OAAQzM,EAAIkC,OAAOwH,UAAW5I,KAAMd,EAAIkC,OAAOkI,YAAa9K,MAAOU,EAAIkC,OAAO5C,QAChNoC,QAAQC,IAAII,GAEZ2I,EAAY3I,GAOZL,QAAQC,IAAI2K,GACZ5K,QAAQC,IAAI4K,GACZD,EAAMrI,KAAI,SAACC,GAAD,OAAUA,KAGpB,IAFA,IAAI0C,EAAM,EAEDC,EAAI,EAAGA,EAAI9E,EAAI+E,OAAQD,IAC5BD,GAAO7E,EAAI8E,GAAGvH,MAElBoC,QAAQC,IAAIiF,GACZyF,EAAiBzF,OAOrB7E,EAAI7B,KAAK,CAAES,GAAI,EAAGwB,QAAS,uBAAwBoB,MAAO6C,EAAetD,KAAM,iBAAkB0J,OAAQ,iBAAkBC,OAAQ,iBAAkB3L,KAAM,iBAAkBxB,MAAO,IACpL+M,EAAiB,GACjB3B,EAAY3I,GACZL,QAAQC,IAAII,IAGhBoE,GAAa,GAzDjB,kBA2DWpE,GA3DX,6CAzBuC,sBAuFvC,OACI,8BACI,sBAAK1B,UAAU,2BAAf,UACI,cAACF,EAAA,EAAD,CAAME,UAAU,wBAAhB,SACI,eAACG,EAAA,EAAD,CAAMC,SAAU,SAACxB,GAAD,OA3FO,2CA2FAyN,CAAYzN,IAAIoB,UAAU,6BAAjD,UACI,cAACG,EAAA,EAAKI,MAAN,2BACA,eAACJ,EAAA,EAAKuD,OAAN,CAAaC,SAAU,SAAC/E,GAAD,OAAOoH,EAAiBpH,EAAE2E,OAAOtE,QAAQ0B,UAAQ,EAAxE,UACI,wBAAQ1B,MAAM,GAAd,0BA5FH,CACjB,CAAEqB,GAAI,EAAG4C,MAAO,WAChB,CAAE5C,GAAI,EAAG4C,MAAO,YAChB,CAAE5C,GAAI,EAAG4C,MAAO,SAChB,CAAE5C,GAAI,EAAG4C,MAAO,SAChB,CAAE5C,GAAI,EAAG4C,MAAO,OAChB,CAAE5C,GAAI,EAAG4C,MAAO,QAChB,CAAE5C,GAAI,EAAG4C,MAAO,QAChB,CAAE5C,GAAI,EAAG4C,MAAO,UAChB,CAAE5C,GAAI,EAAG4C,MAAO,aAChB,CAAE5C,GAAI,GAAI4C,MAAO,WACjB,CAAE5C,GAAI,GAAI4C,MAAO,YACjB,CAAE5C,GAAI,GAAI4C,MAAO,aAiFiBU,KAAI,SAACC,GACf,OAAO,wBAAsB5E,MAAO4E,EAAKX,MAAlC,SAA0CW,EAAKX,OAAlCW,EAAKvD,UAGjC,cAACM,EAAA,EAAD,CAAQH,KAAK,SAAb,4BAIPoF,GAAa,eAACa,EAAA,EAAD,CAAOC,UAAQ,EAAf,UAEV,kCACI,+BACI,6BAAK5H,KACL,6BAAKgH,OAET,+BACI,uCACA,sCACA,yCACA,iDACA,iDACA,8CACA,qDAIR,gCACK+F,EAASlI,KAAI,SAACC,GACX,MAAe,UAAZA,EAAKpD,MAAgBoD,EAAK5E,OAAO,IAC9B,+BACF,6BAAK4E,EAAKX,QACV,6BAAKW,EAAKpB,OACV,6BAAKoB,EAAK/B,UACV,6BAAK+B,EAAKsI,SACV,6BAAKtI,EAAKuI,SACV,6BAAKvI,EAAKpD,OACV,oBAAIT,UAAU,YAAd,SAA2B6D,EAAK5E,UAPrB4E,EAAKvD,IAUV,+BACN,6BAAKuD,EAAKX,QACV,6BAAKW,EAAKpB,OACV,6BAAKoB,EAAK/B,UACV,6BAAK+B,EAAKsI,SACV,6BAAKtI,EAAKuI,SACV,6BAAKvI,EAAKpD,OACV,6BAAKoD,EAAK5E,UAPK4E,EAAKvD,SAYhC,gCACI,+BACI,6BAAKV,KACL,qDAAwBmG,KACxB,6BAAKgG,iB,8CCtIjC,kCAAAlN,EAAA,6DAGMH,EAAOC,cAEbgH,YAAmBjH,GAAM,SAACW,GACpBA,IAGIA,EAAK2C,IACL3C,EAAKC,MACXM,GAAKP,EAAKI,gBAOJzC,EAAKY,cACLgL,EAAIC,YAAMrH,YAAWxE,EAAI,UAC3B0E,EAAI,GApBZ,SAqBgCH,YAAQqH,GArBxC,qBAsBkBhH,SAAQ,SAACjC,GAInB0B,QAAQC,IAAI3B,EAAIW,GAAI,OAAQX,EAAIkC,QAChCH,EAAI7B,KAAK,CAACD,KAAMD,EAAIkC,OAAOjC,KAAMU,GAAGX,EAAIkC,OAAOvC,WA3BvD,kBA+BWoC,GA/BX,6C,sBAwCe,SAAS4K,KACpB,IACA,EAA8BnO,oBAAS,GAAvC,mBAAMoO,EAAN,KAAgBC,EAAhB,KACA,EAAoCrO,oBAAS,GAA7C,mBAAMsO,EAAN,KAAmBC,EAAnB,KACArL,QAAQC,IAAIiL,GACZ,MAAoCpO,oBAAS,GAA7C,mBAAMwO,EAAN,KAAmBC,EAAnB,KACA,EAAyDzO,oBAAS,GAAlE,mBAAO0O,EAAP,KAA8BC,EAA9B,KACA,EAAuB3O,mBAAS,IAAhC,mBAAO0I,EAAP,KAAakG,EAAb,KACA1L,QAAQC,IAAIuF,GACZ,MAAuB1I,mBAAS,MAAhC,mBAAO+E,EAAP,KAAa8J,EAAb,KACA,EAAqB7O,mBAAS,MAA9B,mBAAOkB,EAAP,KAAY4N,EAAZ,KACA,EAAkC9O,oBAAS,GAA3C,mBAAM+O,EAAN,KAAkBC,EAAlB,KAEA9L,QAAQC,IAAIjC,GACZgC,QAAQC,IAAI4B,GACZ,MAAkC/E,mBAAS,IAA3C,mBAAO8H,GAAP,KAAkBC,GAAlB,KACA7E,QAAQC,IAAI2E,IACZ,OAAwB9H,mBAAS,IAAjC,qBAAOwE,GAAP,MAAaC,GAAb,MACA,GAAyCzE,oBAAS,GAAlD,qBAAOiP,GAAP,MAAsBC,GAAtB,MACA,GAAqBlP,mBAAS,IAA9B,qBAAO8J,GAAP,MAAYqF,GAAZ,MACAjM,QAAQC,IAAI2G,IACZ,OAA6B9J,qBAA7B,qBAAO4I,GAAP,MAAgBC,GAAhB,MACA3F,QAAQC,IAAIyF,IACZ,OAAyC5I,oBAAS,GAAlD,qBAAOoP,GAAP,MAAsBC,GAAtB,MACAnM,QAAQC,IAAIiM,IACZ,OAAqDpP,oBAAS,GAA9D,qBAAMsP,GAAN,MAA4BC,GAA5B,MACA,GAAkCvP,oBAAS,GAA3C,qBAAMwP,GAAN,MAAkBC,GAAlB,MACA,GAA8CzP,oBAAS,GAAvD,qBAAM0P,GAAN,MAAwBC,GAAxB,MACA,GAAkD3P,oBAAS,GAA3D,qBAAM4P,GAAN,MAA0BC,GAA1B,MACA,GAAgD7P,oBAAS,GAAzD,qBAAM8P,GAAN,MAAyBC,GAAzB,MA7BqC,8CAyCrC,WAAwBtP,GAAxB,qBAAAC,EAAA,yDACGD,EAAEE,iBACK9B,EAAKY,cAEA,OAARsF,GAAqB,OAAP7D,EAJrB,iEAOgCkC,YAAQC,YAAWxE,EAAI,gBAAiBkG,EAAO7D,IAP/E,OAOUoC,EAPV,OAQIJ,QAAQC,IAAIG,GACRC,EAAM,GACNyE,EAAQ,IAEc,IAAtB1E,EAAcE,MAElBF,EAAcG,SAAQ,SAACjC,GAEnB0B,QAAQC,IAAI3B,EAAIW,GAAI,OAAQX,EAAIkC,QAChCH,EAAI7B,KAAK,CAAES,GAAIX,EAAIW,GAAIqC,KAAMhD,EAAIkC,OAAOc,KAAMF,KAAK9C,EAAIkC,OAAOY,KAAMX,QAAQnC,EAAIkC,OAAOC,UACvFT,QAAQC,IAAII,GAEZyE,EAAMtG,KAAKuG,SAASC,OAAOC,OAAO3G,EAAIkC,OAAOc,QAC7CwD,EAAMvC,KAAI,SAACC,GAAD,OAAQA,KAGlB,IAFA,IAAI0C,EAAM,EAEDC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IAC9BD,GAAOJ,EAAMK,GAEjBnF,QAAQC,IAAIiF,GACZ3D,GAAQ2D,GACRL,GAAaxE,GACbL,QAAQC,IAAII,OAMZkB,GAAQ,GACRlB,EAAI7B,KAAK,CAAES,GAAG,EAAEmC,KAAKS,EAAMpB,QAAQ,CAACA,QAAQ,WAAWa,KAAK,CAACA,KAAK,uBAClEuD,GAAaxE,GACbL,QAAQC,IAAII,IAvCpB,QA2CC9C,EAAE2E,OAAOC,QA3CV,6CAzCqC,oEA0FrC,gCAAA3E,EAAA,6DACU7B,EAAGY,cADb,SAEgC2D,YAAQC,YAAWxE,EAAI,OAAO,OAAQ+J,KAFtE,OAEUtF,EAFV,OAGIJ,QAAQC,IAAIG,GACRC,EAAI,IACkB,IAAtBD,EAAcE,MAEdF,EAAcG,SAAQ,SAACjC,GAEnB0B,QAAQC,IAAI3B,EAAIW,GAAI,OAAQX,EAAIkC,QAChCH,EAAI7B,KAAK,CAAES,GAAIX,EAAIW,GAAIoH,SAAU/H,EAAIkC,OAAO6F,SAAUD,YAAY9H,EAAIkC,OAAO4F,YAAaD,SAAS7H,EAAIkC,OAAO2F,SAASD,UAAU5H,EAAIkC,OAAO0F,YAC5IlG,QAAQC,IAAII,GAQZL,QAAQC,IAAII,OAOZA,EAAI7B,KAAK,MACTyN,GAAQ5L,GACRL,QAAQC,IAAII,IAIhB4L,GAAQ5L,GAhChB,4CA1FqC,sBAuQrC,OAvOAU,qBAAU,Y,4CACN+L,GACChP,MAAK,SAACuC,GACHqL,EAASrL,QAIf,IAkOE,qBAAK1B,UAAU,WAAWsE,MAAO,CAAC8J,gBAAgBC,EAAKC,eAAe,SAAtE,SACI,eAACC,EAAA,EAAD,WACI,cAAC,EAAD,IACA,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,wBAAQzO,UAAU,kBAAkBqE,QA3BpD,WACI8I,GAAgBD,GAChBM,IAAkB,GAClBH,IAAkB,GAClBX,GAAgB,GAChBI,GAA0B,GAC1BN,GAAa,GACbI,GAAgB,GAChBgB,IAAe,GACfF,IAAwB,GACxBM,IAAuB,IAiBX,6BACA,yBAAQhO,UAAU,kBAAmBqE,QA/IrD,WACImI,GAAcD,GACdK,GAAgB,GAChBE,GAA0B,GAC1BJ,GAAgB,GAChBc,IAAkB,GAClBH,IAAkB,GAClBW,IAAuB,GACvBF,IAAqB,GACrBX,GAAe,IAsIH,UAA+D,cAAC,IAAD,CAAgBnN,UAAU,eAAzF,uBACCuM,GAAa,gCAAK,cAAC,KAAD,CAAoBvM,UAAU,gBAAgB,cAACY,EAAA,EAAD,CAAQZ,UAAU,oBAAoBqE,QAjFvH,WACIqJ,IAAyBD,IACzBG,IAAe,IA+E8D,mCAChErB,GAAa,gCAAK,cAAC,KAAD,CAAoBvM,UAAU,gBAAe,cAACY,EAAA,EAAD,CAAQZ,UAAU,oBAAoBqE,QA7EtH,WACIuJ,IAAgBD,IAChBD,IAAwB,IA2EoD,kCAC/DnB,GAAa,gCAAK,cAAC,KAAD,CAAcvM,UAAU,gBAA7B,IAA6C,cAAC,KAAD,CAAsBqE,QAzEjG,WACIuJ,IAAe,GACfF,IAAwB,GACxBlB,GAAa,IAsEgHxM,UAAU,iBAC3H,yBAAQA,UAAU,kBAAkBqE,QAtIpD,WACImI,GAAa,GACbI,GAAiBD,GACjBD,GAAgB,GAChBI,GAA0B,GAC1BO,IAAkB,GAClBG,IAAkB,IAgIN,UAAiE,cAAC,KAAD,CAAcxN,UAAU,kBAAzF,iBACC2M,GAAc,gCAAK,cAAC,KAAD,CAAoB3M,UAAU,gBAAgB,cAACY,EAAA,EAAD,CAAQZ,UAAU,oBAAoBqE,QAhDxH,WACI6J,IAAuBD,IACvBD,IAAuB,GACvBb,GAAe,GACfK,IAAkB,GAClBH,IAAkB,GAClBX,GAAgB,GAChBI,GAA0B,GAC1BN,GAAa,GACboB,IAAe,GACfF,IAAwB,GACxBlB,GAAa,IAqCiE,8BACjEG,GAAc,gCAAK,cAAC,KAAD,CAAoB3M,UAAU,gBAAgB,cAACY,EAAA,EAAD,CAAQZ,UAAU,oBAAoBqE,QA1DxH,WACI2J,IAAwBD,IACxBD,IAAqB,GACrBF,IAAe,GACfF,IAAwB,GACxBlB,GAAa,GACbW,GAAe,IAoD+D,6BACjER,GAAgB,gCAAK,cAAC,KAAD,CAAc3M,UAAU,gBAA7B,IAA6C,cAAC,KAAD,CAAsBqE,QAvEpG,WACIyJ,IAAqB,GACrBE,IAAuB,GACvBpB,GAAgB,IAoE6G5M,UAAU,iBAC3H,yBAAQA,UAAU,eAAeqE,QAhIjD,WACIyI,GAA2BD,GAC3BL,GAAa,GACbI,GAAgB,GAChBF,GAAgB,GAChBc,IAAkB,GAClBH,IAAkB,GAClBW,IAAuB,GACvBF,IAAqB,GACrBX,GAAe,IAuHH,UAAwE,cAAC,IAAD,CAAgBnN,UAAU,eAAlG,+BACC6M,GAAwB,cAAC/M,EAAA,EAAD,CAAME,UAAU,aAAhB,SACrB,cAACF,EAAA,EAAKC,KAAN,UACA,eAACI,EAAA,EAAD,CAAMH,UAAU,eAAeI,SAAU,SAACxB,GAAD,OAzRxB,4CAyR6B8P,CAAS9P,IAAvD,UACI,eAACuB,EAAA,EAAKE,MAAN,WACJ,cAACF,EAAA,EAAKI,MAAN,0BACA,uBACA,eAACJ,EAAA,EAAKuD,OAAN,CAAaC,SAAU,SAAC/E,GAAD,OAAKqO,EAAQrO,EAAE2E,OAAOtE,QAAQ0B,UAAQ,EAA7D,UAEI,wBAAQ1B,MAAM,GAAd,kBACC4H,EAAMjD,KAAI,SAAC+K,GACR,OAAO,wBAAuBrO,GAAIqO,EAAI/O,KAAMX,MAAO0P,EAAIrO,GAAhD,SAAsDqO,EAAI/O,MAA7C+O,EAAI/O,eAMhC,uBACA,eAACO,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,2BACA,eAACJ,EAAA,EAAKuD,OAAN,CAAaC,SAAU,SAAC/E,GAAD,OAAKoO,EAASpO,EAAE2E,OAAOtE,QAAQ0B,UAAQ,EAA9D,UACI,wBAAQ1B,MAAM,GAAd,mBA1Sf,CAAC,CAACqB,GAAG,EAAEV,KAAK,WAAW,CAACU,GAAG,EAAEV,KAAK,YAAY,CAACU,GAAG,EAAEV,KAAK,SAAS,CAACU,GAAG,EAAEV,KAAK,SAAS,CAACU,GAAG,EAAEV,KAAK,OAAO,CAACU,GAAG,EAAEV,KAAK,QAAQ,CAACU,GAAG,EAAEV,KAAK,QAAQ,CAACU,GAAG,EAAEV,KAAK,UAAU,CAACU,GAAG,EAAEV,KAAK,aAAa,CAACU,GAAG,GAAGV,KAAK,WAAW,CAACU,GAAG,GAAGV,KAAK,YAAY,CAACU,GAAG,GAAGV,KAAK,aA2SnOgE,KAAI,SAACgL,GACT,OAAO,wBAAqB3P,MAAO2P,EAAIhP,KAAhC,SAAuCgP,EAAIhP,MAA9BgP,EAAItO,aAKhC,uBACA,cAACM,EAAA,EAAD,CAAQH,KAAK,SAAb,6BAIJ,yBAAQT,UAAU,eAAeS,KAAK,SAAS4D,QAtJ/D,WACIqI,GAAiBD,GACjBK,GAA0B,GAC1BN,GAAa,GACbI,GAAgB,GAChBS,IAAkB,GAClBG,IAAkB,GAClBL,GAAe,IA+IH,UAA4E,cAAC,KAAD,CAAYnN,UAAU,qBAAlG,eACA,uBACA,yBAAQA,UAAU,eAAeqE,QA9IjD,WACIgJ,IAAmBD,IACnBV,GAAgB,GAChBI,GAA0B,GAC1BN,GAAa,GACbI,GAAgB,GAChBY,IAAkB,GAClBL,GAAe,IAuIH,UAAgE,cAAC,KAAD,CAAYnN,UAAU,qBAAtF,sBACCoN,IAAiB,cAACtN,EAAA,EAAD,CAAME,UAAU,oBAAhB,SACd,eAACF,EAAA,EAAKC,KAAN,WACI,uBAAOqI,QAAQ,OAAf,yBACA,uBACA,yBAAQxI,KAAK,OAAOU,GAAG,OAAON,UAAU,YAAY2D,SAAU,SAAC/E,GAAD,OAAKoI,GAAYpI,EAAE2E,OAAOtE,QAAxF,UACI,wBAAQA,MAAM,OAAd,yBACH4H,EAAMjD,KAAI,SAAC+K,GACR,OAAO,wBAAuBrO,GAAIqO,EAAI/O,KAAMX,MAAO0P,EAAIrO,GAAhD,SAAsDqO,EAAI/O,MAA7C+O,EAAI/O,YAI5B,uBACA,wBAAQI,UAAU,oBAAoBqE,QAtUzB,4CAsUb,4BAIR,eAACzD,EAAA,EAAD,CAAQyD,QArJxB,WACImJ,IAAmBD,IACnBF,IAAkB,GAClBX,GAAgB,GAChBI,GAA0B,GAC1BN,GAAa,GACbI,GAAgB,GAChBO,GAAe,IA8IH,UAAuC,cAAC,KAAD,CAAgBnN,UAAU,iBAAjE,qBAEJ,eAACwO,EAAA,EAAD,CAAKC,GAAI,GAAT,UACGhB,IAA0B,cAAC,EAAD,IAC1BE,IAAe,cAAC,EAAD,IACfd,GAAyB,cAAC,EAAD,CAAyBhL,KAAMoE,GAAWtD,KAAMA,GAAMO,MAAOA,EAAOgB,MA5E5G,WACI4I,GAA0B,MA4EfI,GAAa,cAAC,GAAD,CAAahJ,MAhFzC,WACIiJ,GAAe,MAgFJV,GAAc,cAAC,EAAD,CAAU5F,MAAOA,IAC/BuG,IAAgB,cAAC,EAAD,CAAiBvL,KAAMoG,GAAM5I,KAAM0H,KACnDwG,IAAgB,cAAC,EAAD,CAAY1G,MAAOA,IACnCkH,IAAsB,cAAC,GAAD,IACtBF,IAAoB,cAAC,GAAD,CAAkBjO,KAAMA,a,cChZhD,SAASiP,GAAT,GAA6C,IAAnBC,EAAkB,EAAlBA,MAAM3N,EAAY,EAAZA,SAE3C,EAAgChD,mBAAS,IAAzC,mBAAO4Q,EAAP,KAAiBC,EAAjB,KACA,EAAoB7Q,qBAApB,mBAAOmC,EAAP,KAAW2O,EAAX,KACA,EAAqB9Q,qBAArB,mBAAO+Q,EAAP,KAAYC,EAAZ,KAJuD,4CAwBvD,WAA0B7O,GAA1B,iBAAAzB,EAAA,6DAGU7B,EAAGY,cACHwR,EAAUzP,YAAI3C,EAAI,YAAYmE,EAASb,GAJjD,SAOU+O,YAAUD,EAAS,CACrB1H,SAASwH,IARjB,2CAxBuD,wBAoCvD,OA/BA7N,QAAQC,IAAIhB,GACZe,QAAQC,IAAIyN,GAcZ3M,qBAAU,WACN4M,EAAYF,KACb,CAACA,IAeA,qBAAK9O,UAAU,qBAAf,SACK+O,EAASnL,KAAI,SAACC,GACX,OAAO,eAAC/D,EAAA,EAAD,CAAoBE,UAAU,YAA9B,UACH,eAACF,EAAA,EAAKwP,OAAN,eAAc,6BAAKzL,EAAKuD,QAAxB,OACA,eAACtH,EAAA,EAAKC,KAAN,WACI,6BAAK8D,EAAKwD,OACV,6BAAKxD,EAAKpB,OACV,uBAAOhC,KAAK,WAAWb,KAAK,OAAOU,GAAIuD,EAAKvD,GAAI+H,QAASxE,EAAKqL,KAAMvL,SAAU,SAAC/E,GAAD,OAnClG,SAAsB0B,GAClB,IAAM0H,EAAO,YAAO8G,GACd7G,EAAOD,EAAQE,MAAK,SAAAD,GAAI,OAAIA,EAAK3H,KAAOA,KAC9C2H,EAAKiH,MAAQjH,EAAKiH,KAClBF,EAAYhH,GACZiH,EAAMhH,EAAK3H,IACX6O,EAAQlH,EAAKiH,MAGb7N,QAAQC,IAAI0G,GA0ByFD,CAAanJ,EAAE2E,OAAOjD,UAG/G,cAACR,EAAA,EAAKyP,OAAN,UAAa,cAAC3O,EAAA,EAAD,CAAQN,GAAIuD,EAAKvD,GAAI+D,QAAS,SAACzF,GAAD,OA/CJ,2CA+CS4Q,CAAW5Q,EAAE2E,OAAOjD,KAAvD,wBARCuD,EAAKvD,SC/BvC,IAAIa,GAAWF,eAAeG,QAAQ,QAChC1C,GAAOC,c,8CAcb,gCAAAE,EAAA,6DACU7B,EAAKY,eACLgL,EAAIC,aAAMrH,aAAWxE,EAAI,YAAYmE,KACvCO,EAAI,GAHZ,SAIgCH,aAAQqH,GAJxC,qBAKkBhH,SAAQ,SAACjC,GAInB0B,QAAQC,IAAI3B,EAAIW,GAAI,OAAQX,EAAIkC,QAChCH,EAAI7B,KAAK,CAACS,GAAGX,EAAIW,GAAG8G,MAAMzH,EAAIkC,OAAO0F,UAAUF,KAAK1H,EAAIkC,OAAO2F,SAAS/E,KAAK9C,EAAIkC,OAAO4F,YAAYyH,KAAKvP,EAAIkC,OAAO6F,cAV5H,kBAcWhG,GAdX,4C,sBAiBe,SAAS+N,KACpB,MAA8BtR,oBAAS,GAAvC,mBAAMoO,EAAN,KAAgBC,EAAhB,KACAnL,QAAQC,IAAIiL,GACZ,MAAoCpO,oBAAS,GAA7C,mBAAMwO,EAAN,KAAmBC,EAAnB,KACA,EAA4BzO,oBAAS,GAArC,mBAAMuR,EAAN,KAAeC,EAAf,KACA,EAAqDxR,oBAAS,GAA9D,mBAAMsP,EAAN,KAA4BC,EAA5B,KACA,EAAkCvP,oBAAS,GAA3C,mBAAMwP,EAAN,KAAkBC,EAAlB,KACA,EAA8BzP,oBAAS,GAAvC,mBAAMyR,EAAN,KAAgBC,EAAhB,KACA,EAAsB1R,mBAAS,IAA/B,mBAAM2Q,EAAN,KAAYgB,EAAZ,KACA,EAA8C3R,oBAAS,GAAvD,mBAAwB2P,GAAxB,WACA,EAAkD3P,oBAAS,GAA3D,mBAAM4P,EAAN,KAA0BC,EAA1B,KACA,EAAgD7P,oBAAS,GAAzD,mBAAM8P,EAAN,KAAyBC,EAAzB,KAqEA,OAnEA9L,qBAAU,Y,4CACN2N,GACC5Q,MAAK,SAACuC,GAAD,OAAOoO,EAASpO,QACxB,IAiEE,8BACI,eAAC6M,EAAA,EAAD,WACI,cAAC,EAAD,IACA,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,wBAAQzO,UAAU,kBAAmBqE,QAnErD,WACImI,GAAcD,GACdK,GAAgB,GAChB+C,GAAY,IAgEA,2BACCpD,GAAa,gCAAK,cAAC,KAAD,CAAoBvM,UAAU,gBAAgB,cAACY,EAAA,EAAD,CAAQZ,UAAU,oBAAoBqE,QAtDvH,WACIqJ,GAAyBD,GACzBG,GAAe,IAoD8D,mCAChErB,GAAa,gCAAK,cAAC,KAAD,CAAoBvM,UAAU,gBAAe,cAACY,EAAA,EAAD,CAAQZ,UAAU,oBAAoBqE,QAlDtH,WACIuJ,GAAgBD,GAChBD,GAAwB,IAgDoD,kCAC/DnB,GAAa,gCAAK,cAAC,KAAD,CAAcvM,UAAU,gBAA7B,IAA6C,cAAC,KAAD,CAAsBqE,QA9CjG,WACIuJ,GAAe,GACfF,GAAwB,GACxBlB,GAAa,IA2CgHxM,UAAU,iBAC3H,uBACA,wBAAQA,UAAU,kBAAkBqE,QAjEpD,WACImI,GAAa,GACbI,GAAiBD,GACjBgD,GAAY,IA8DA,6BACChD,GAAc,gCAAK,cAAC,KAAD,CAAoB3M,UAAU,gBAAgB,cAACY,EAAA,EAAD,CAAQZ,UAAU,oBAAoBqE,QAhBxH,WACI6J,GAAuBD,GACvBD,GAAuB,IAcuD,8BACjErB,GAAc,gCAAK,cAAC,KAAD,CAAoB3M,UAAU,gBAAgB,cAACY,EAAA,EAAD,CAAQZ,UAAU,oBAAoBqE,QArBxH,WACI2J,GAAwBD,GACxBD,GAAqB,IAmByD,6BACjEnB,GAAgB,gCAAK,cAAC,KAAD,CAAc3M,UAAU,gBAA7B,IAA6C,cAAC,KAAD,CAAsBqE,QApCpG,WACIyJ,GAAqB,GACrBE,GAAuB,GACvBpB,GAAgB,GAChBkB,GAAqB,GACrBI,GAAsB,IA+BuGlO,UAAU,iBAC3H,cAACY,EAAA,EAAD,CAAQyD,QA9CxB,WACIwL,GAAcD,GACdhC,GAAe,GACfF,GAAwB,GACxBlB,GAAa,GACbI,GAAgB,GAChB+C,GAAY,IAwCA,2BAGJ,eAACnB,EAAA,EAAD,CAAKC,GAAI,GAAT,UACEhB,GAAyB,cAAC,EAAD,IACzBE,GAAgB,cAAC,EAAD,IACjBI,GAAsB,cAAC,GAAD,IACtBE,GAAoB,cAAC,GAAD,IACnByB,GAAY,qBAAK1P,UAAU,YAAf,SAA2B,qBAAKuF,IAAKC,EAAMC,IAAI,WAC3DmK,GAAY,cAAC,GAAD,CAAgBd,MAAOA,EAAO3N,SAAUA,aArItEwE,YAAmBjH,IAAM,SAACW,GAClBA,IAGA8B,GAAW9B,EAAKC,UCwBT0Q,OA3Bf,WACE,OAGI,qBAAKhQ,UAAU,gCAAf,SACE,cAAC,IAAD,CAAQiQ,SAAS,iBAAjB,SACE,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrP,IACjC,cAAC,IAAD,CAAOoP,KAAK,kBAAkBC,UAAW9D,KACzC,cAAC,IAAD,CAAO6D,KAAK,iBAAiBC,UAAWX,KACxC,cAAC,IAAD,CAAOU,KAAK,UAAUC,UAAWvS,YCvB/CwS,IAASC,OAEL,cAAC,IAAD,UACA,cAAC,GAAD,MAGFC,SAASC,eAAe,U","file":"static/js/main.b00d387e.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\"\r\nimport { getAuth, createUserWithEmailAndPassword, updateProfile } from '@firebase/auth'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\r\nimport './Signup.css'\r\nimport { doc, collection, setDoc, getFirestore } from 'firebase/firestore'\r\n\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { initializeApp } from 'firebase/app';\r\n\r\n\r\n\r\nconst firebaseApp = initializeApp({\r\n\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n\r\n});\r\n\r\n\r\n\r\nconst db = getFirestore()\r\n\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const nameRef = useRef()\r\n   \r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const auth = getAuth();\r\n   \r\n    \r\n    \r\n   \r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        let user;\r\n        const userEmail = emailRef.current.value\r\n        \r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n       \r\n\r\n\r\n\r\n\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await createUserWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value)\r\n                .then((cred) => { return user = cred.user.email })\r\n            await updateProfile(auth.currentUser, {\r\n                displayName: nameRef.current.value,\r\n                \r\n\r\n            })\r\n            await setDoc(doc(db, \"users\", user), {\r\n                name: nameRef.current.value,\r\n                email: emailRef.current.value,\r\n            });\r\n\r\n            \r\n\r\n\r\n\r\n\r\n        } catch {\r\n            setError(\"Failed to create an account\")\r\n        }\r\n        if (userEmail === \"alexandru.smarian@yahoo.com\"||userEmail===\"admin@team-connect.com\") {\r\n            history.push(\"/dashboardadmin\");\r\n        } else {\r\n            history.push(\"/dashboarduser\");\r\n        }\r\n\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"Name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"Name\" ref={nameRef} required />\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Sign Up\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/\">Log In</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\n\r\nimport { getAuth, signInWithEmailAndPassword, } from '@firebase/auth'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\n\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const auth = getAuth();\r\n\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n\r\n            await signInWithEmailAndPassword(auth, emailRef.current.value, passwordRef.current.value)\r\n                .then(sessionStorage.setItem('user', emailRef.current.value))\r\n            const userName = sessionStorage.getItem('user');\r\n            console.log(userName);\r\n            if (userName === \"alexandru.smarian@yahoo.com\" || userName === \"admin@team-connect.com\") {\r\n                history.push(\"/dashboardadmin\");\r\n            } else {\r\n                history.push(\"/dashboarduser\");\r\n            }\r\n\r\n\r\n\r\n        } catch {\r\n            setError(\"Email or Password not Valid!!!\")\r\n        }\r\n\r\n        try{\r\n\r\n\r\n        }catch{\r\n\r\n        }\r\n\r\n\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Sign In\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                You don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect,  useState, } from 'react'\r\nimport { getAuth, } from '@firebase/auth';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { addDoc, collection, getDocs } from 'firebase/firestore'\r\nimport { Button, Form, Card, Alert } from 'react-bootstrap'\r\n\r\nimport './WorkTimeImputer.css'\r\n\r\n\r\nconst db = getFirestore()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar userName;\r\n\r\n\r\nasync function GetProjects() {\r\n\r\n\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n\r\n    if (user) {\r\n        userName = user.email;\r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/firebase.User\r\n        // ...\r\n    } else {\r\n        // No user is signed in.\r\n    }\r\n\r\n    const querySnapshot = await getDocs(collection(db, \"project\", \"team\", userName));\r\n\r\n    let arr = [];\r\n    if (querySnapshot.empty !== true) {\r\n\r\n        querySnapshot.forEach((doc) => {\r\n            // doc.data() is never undefined for query doc snapshots\r\n            console.log(doc.id, \" => \", doc.data().project);\r\n            arr.push({ id: doc.id, project: doc.data().projectName })\r\n            console.log(arr)\r\n\r\n\r\n\r\n\r\n\r\n        })\r\n    } else {\r\n\r\n        arr.push({ id: 1, project: \"No available Project\" })\r\n\r\n        console.log(arr)\r\n    }\r\n\r\n\r\n\r\n    return arr;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst uid = sessionStorage.getItem('user');\r\n\r\n\r\n\r\nconsole.log(uid);\r\nexport default function WorkTimeImputer() {\r\n    const monthOptions = [\r\n        { id: 1, month: \"January\" },\r\n        { id: 2, month: \"February\" },\r\n        { id: 3, month: \"March\" },\r\n        { id: 4, month: \"April\" },\r\n        { id: 5, month: \"May\" },\r\n        { id: 6, month: \"June\" },\r\n        { id: 7, month: \"July\" },\r\n        { id: 8, month: \"August\" },\r\n        { id: 9, month: \"September\" },\r\n        { id: 10, month: \"October\" },\r\n        { id: 11, month: \"November\" },\r\n        { id: 12, month: \"December\" }\r\n    ]\r\n\r\n    const [openProject, setOpenProject] = useState([])\r\n    console.log(openProject)\r\n\r\n    useEffect(() => {\r\n        GetProjects()\r\n            .then((arr) => setOpenProject(arr))\r\n    },[])\r\n\r\n\r\n\r\n    const [actualMonth, setActualMonth] = useState()\r\n    console.log(actualMonth)\r\n    const [project, setProject] = useState()\r\n\r\n   \r\n    const [date, setdate] = useState()\r\n    console.log(date)\r\n    const [time, setTime] = useState()\r\n    const [success,setSucces]=useState(\"\")\r\n    const [error,setError]=useState(\"\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    async function handleWorkingTimeSubmit(e) {\r\n        e.preventDefault()\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n\r\n        if (user) {\r\n            userName = user.email;\r\n            // User is signed in, see docs for a list of available properties\r\n            // https://firebase.google.com/docs/reference/js/firebase.User\r\n            // ...\r\n        } else {\r\n            // No user is signed in.\r\n        }\r\n\r\n\r\n\r\n        const workingTime = collection(db, \"working-hours\", actualMonth, userName);\r\n\r\n\r\n        console.log(date)\r\n\r\n        if(project===\"No available Project\"){\r\n           setError(\"NO Project No Hours\")\r\n           setTimeout(()=>setError(\"\"),2000)\r\n            return\r\n        }else{\r\n\r\n        try {\r\n\r\n            const docRef = await addDoc(workingTime, {\r\n                month: { actualMonth },\r\n                project: { project },\r\n                date: new Date(date).toLocaleString('en-RO').split(',')[0],\r\n                time: { time }\r\n            });\r\n\r\n\r\n            console.log(docRef)\r\n        } catch {\r\n            console.error(\"wrong aproach\", date, project, time);\r\n        }\r\n    }\r\n    setSucces(\"Data Succesfully Saved\")\r\n    setTimeout(()=>setSucces(\"\"),1800)\r\n    e.target.reset()\r\n    }\r\n    return (\r\n        <div className=\"container-fluid inputer\">\r\n            <Card className=\"set-todo-card\">\r\n                {success&&<Alert variant=\"success\">{success}</Alert>}\r\n                {error&&<Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={(e) => handleWorkingTimeSubmit(e)} className=\"work-imputer-form\">\r\n                    <Form.Group>\r\n                        <Form.Label  >Month</Form.Label>\r\n                        <Form.Select onChange={(e) => setActualMonth(e.target.value)} required>\r\n                            <option value=\"\">Select Month</option>\r\n                            {monthOptions.map((item) => {\r\n                                return <option key={item.id} value={item.month}>{item.month}</option>\r\n\r\n                            })\r\n                            }\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Project</Form.Label>\r\n                        <Form.Select onChange={(e) => setProject(e.target.value)} required>\r\n                            <option value=\"\">Select a Project</option>\r\n                            {openProject.map((item) => {\r\n                                return <option key={item.id} value={item.project}>{item.project}</option>\r\n                            })}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Select Date</Form.Label>\r\n                        <Form.Control type=\"date\" dateformat=\"dd/MM/yyyy\" required onChange={(e) => setdate(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>hours</Form.Label>\r\n                        <Form.Control type=\"number\" max=\"9\" min=\"0\" required onChange={(e) => setTime(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Set working hours</Button>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './MonthRequestWorkingTime.css'\r\nimport { CSVLink } from \"react-csv\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function MonthRequestWorkingTime({ user, month, userName, data, time ,close}) {\r\n\r\n\r\n    const header = [\"Date\", \"Project\", \"Time\", \"total\", time]\r\n    const csvData =\r\n        data.map((item) => [item.date, item.project.project, item.time.time,])\r\n\r\n\r\n        ;\r\n    console.log(csvData)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid table-container\">\r\n            <button onClick={close} className=\"close\">X</button>\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr className=\"table-dark\">\r\n                        <th>Date</th>\r\n                        <th>Project</th>\r\n                        <th>time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr className=\"table-info\">\r\n                        <td>{month}</td>\r\n                        <td>{userName}</td>\r\n                        <td>{user}</td>\r\n                    </tr>\r\n\r\n                    {data.map((data) => {\r\n                        return <tr key={data.id} className=\"table-secondary\">\r\n                            <td>{data.date}</td>\r\n                            <td>{data.project.project}</td>\r\n                            <td>{data.time.time}</td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr className=\"table-secondary\">\r\n                        <td>Total Hours</td>\r\n\r\n                        <td className=\"sum bg-secondary\">{time}</td>\r\n                    </tr>\r\n                </tfoot>\r\n\r\n            </table>\r\n            <button className=\"btn btn-secondary\">\r\n            <CSVLink style={{textDecoration:\"none\",color:\"white\"}} data={csvData} headers={header} filename={\"working-hours\"+month}>Download as CSV</CSVLink>\r\n            </button>\r\n        </div >\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { getAuth, signOut } from 'firebase/auth'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nvar uid = sessionStorage.getItem('logged')\r\n\r\nexport default function Logout() {\r\n    const history = useHistory()\r\n    function logOut() {\r\n\r\n        console.log('logged')\r\n        const auth = getAuth();\r\n\r\n        signOut(auth)\r\n\r\n\r\n        history.push(\"/\")\r\n        sessionStorage.removeItem('logged');\r\n        sessionStorage.removeItem('username')\r\n        sessionStorage.removeItem('user')\r\n        console.log(uid)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <span onClick={logOut}>Log Out</span>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Logout from '../Logout'\r\nimport './Nav.css'\r\nimport { getAuth } from '@firebase/auth'\r\nimport logo from '../../images/logo.png'\r\nimport { FaUserCircle } from 'react-icons/fa'\r\nimport { HiOutlineLogout } from 'react-icons/hi'\r\n\r\n\r\n\r\nlet uid;\r\nlet img;\r\nlet userName;\r\n\r\n\r\n\r\nasync function GetData() {\r\n    const auth = getAuth();\r\n    const user = auth.currentUser\r\n    let arr=[]\r\n    console.log(arr)\r\n    if (user) {\r\n        console.log(user.email)\r\n        console.log(user.providerData)\r\n        uid = user.uid\r\n        img = user.photoURL\r\n        userName = user.displayName\r\n        console.log(user.photoURL)\r\n        console.log(img)\r\n        console.log(userName)\r\n        console.log(uid);\r\n        arr.push(uid,img,userName)\r\n        \r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/firebase.User\r\n        // ...\r\n    } else {\r\n        // No user is signed in.\r\n    }\r\n\r\n    return arr;\r\n\r\n}\r\n\r\n\r\n\r\nexport default function Nav() {\r\n    const [data, setData] = useState('');\r\n    const [image,setImage]=useState()\r\n    console.log(image)\r\n    useEffect(() => {\r\n        GetData()\r\n            .then((arr) => {\r\n                setData(arr[2])\r\n                setImage(arr[1])\r\n            })\r\n    })    \r\n\r\n        if (img === undefined || img === null) {\r\n            return (\r\n                <nav className=\"navbar navbar-expand-sm \" >\r\n                    <div className=\"container-fluid nav\" >\r\n                        <div className=\"img-container\"><img src={logo} alt=\"logo\" width=\"90%\" /></div>\r\n\r\n                        <div className=\"d-flex\">\r\n                            <ul>\r\n\r\n\r\n                                <li><FaUserCircle /> {data}</li>\r\n                                <li><HiOutlineLogout /><Logout /></li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </nav>\r\n\r\n\r\n\r\n            )\r\n        } else {\r\n            return (\r\n                <nav className=\"navbar navbar-expand-sm \" >\r\n                    <div className=\"container-fluid nav\" >\r\n                        <div className=\"img-container\"><img src={logo} alt=\"logo\" width=\"90%\" /></div>\r\n\r\n                        <div className=\"d-flex\">\r\n                            <ul>\r\n                                <div style={{ width: \"50px\" }}><img  className=\"avatar-container\" src={image} alt=\"user\" width=\"100%\" /></div>\r\n\r\n                                <li> {data}</li>\r\n                                <li><HiOutlineLogout /><Logout /></li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </nav>\r\n            )\r\n        }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.0ec206f8.png\";","import React, { useState } from 'react';\r\n\r\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\r\nimport { collection, getDocs, orderBy } from 'firebase/firestore'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { Table, Button, Form ,Card} from 'react-bootstrap';\r\nimport './WorkTimeRenderer.css'\r\n\r\n\r\n\r\n\r\nvar userEmail = sessionStorage.getItem('user')\r\nlet name;\r\nconst auth = getAuth();\r\nonAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/firebase.User\r\n        userEmail = user.email;\r\n        name=user.displayName\r\n    } else {\r\n        // User is signed out\r\n        // ...\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst refreshList = () => {\r\n    window.location.reload()\r\n}\r\n\r\n\r\n\r\n\r\nexport default function WorkTimeRenderer() {\r\n\r\n    const [showTable, setShowTable] = useState(false)\r\n    const monthOptions = [\r\n        { id: 1, month: \"January\" },\r\n        { id: 2, month: \"February\" },\r\n        { id: 3, month: \"March\" },\r\n        { id: 4, month: \"April\" },\r\n        { id: 5, month: \"May\" },\r\n        { id: 6, month: \"June\" },\r\n        { id: 7, month: \"July\" },\r\n        { id: 8, month: \"August\" },\r\n        { id: 9, month: \"September\" },\r\n        { id: 10, month: \"October\" },\r\n        { id: 11, month: \"November\" },\r\n        { id: 12, month: \"December\" }\r\n    ]\r\n\r\n    const [selectedMonth, setSelectedMonth] = useState()\r\n    const[time,setTime]=useState()\r\n    const[dataHours,setDataHours]=useState([])\r\n\r\n    async function ShowData(e) {\r\n        e.preventDefault()\r\n         const db = getFirestore();\r\n \r\n \r\n         const querySnapshot = await getDocs(collection(db, \"working-hours\", selectedMonth, userEmail));\r\n         console.log(querySnapshot)\r\n         let arr = [];\r\n         let times = [];\r\n \r\n         if (querySnapshot.empty!==true){\r\n         \r\n         querySnapshot.forEach((doc) => {\r\n             // doc.data() is never undefined for query doc snapshots\r\n             console.log(doc.id, \" => \", doc.data());\r\n             arr.push({ id: doc.id, time: doc.data().time, date:doc.data().date, project:doc.data().project })\r\n             console.log(arr)\r\n           \r\n             times.push(parseInt(Object.values(doc.data().time)))\r\n             times.map((item)=>item)\r\n             let sum = 0;\r\n            \r\n             for (let i = 0; i < times.length; i++) {\r\n                 sum += times[i];\r\n             }\r\n             console.log(sum);\r\n             setTime(sum)\r\n             setDataHours(arr)\r\n             console.log(arr)\r\n             \r\n             \r\n            \r\n \r\n         })}else{\r\n             setTime(0)\r\n             arr.push({ id:1,date:selectedMonth,project:{project:\"no info\"},time:{time:\"no data available\"}})\r\n             setDataHours(arr)\r\n             console.log(arr)\r\n         }\r\n        \r\n         setShowTable(true)\r\n         \r\n         \r\n \r\n \r\n     }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid renderer\" >\r\n            <Card className=\"workingtime-requester\">\r\n            <Form  onSubmit={ShowData} className=\"workingtime-requester-form\">\r\n                <Form.Label>Select Month</Form.Label>\r\n                <Form.Select onChange={(e) => setSelectedMonth(e.target.value)} required>\r\n                    <option value=\"\">Select Month</option>\r\n                    {monthOptions.map((item) => {\r\n                        return <option key={item.id} value={item.month}>{item.month}</option>\r\n                    })}\r\n                </Form.Select>\r\n                <Button type=\"submit\">Show Data</Button>\r\n            </Form>\r\n            </Card>\r\n\r\n            {showTable && <Table bordered >\r\n\r\n                <thead>\r\n                    <tr>\r\n                        <th>{userEmail}</th>\r\n                        <th>{selectedMonth}</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Project</th>\r\n                        <th>Working Time</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    {dataHours.map((item)=>{\r\n                      return  <tr key={item.id}>\r\n                                <td>{item.date}</td>\r\n                                <td>{item.project.project}</td>\r\n                                <td>{item.time.time}</td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n                <thead>\r\n                    <tr>\r\n                        <th>{name}</th>\r\n                        <th>Total hours for {selectedMonth}</th>\r\n                        <th>{time}</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n            </Table>}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React,{useState,useRef} from 'react'\r\nimport { Card,Form,Button,Alert } from 'react-bootstrap'\r\nimport './SetTodos.css'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport {  addDoc, collection,  } from 'firebase/firestore'\r\n\r\n\r\nexport default function SetTodos({users}) {\r\n    const [error,setError]=useState(\"\")\r\n    const [success,setSuccess]=useState(\"\")\r\n    const [userTodo,setUserTodo]=useState(null);\r\n    console.log(userTodo)\r\n    const titleRef=useRef();\r\n    const textRef=useRef();\r\n    const dateRef=useRef();\r\n\r\n   \r\n\r\n    async function SetTodoItem(e) {\r\n      \r\n        if(userTodo===null){\r\n            e.preventDefault()\r\n            setError(\"Please Select A User\")\r\n            setTimeout(()=>setError(\"\"),2000)\r\n        }else{\r\n            e.preventDefault()\r\n        const title=titleRef.current.value;\r\n        const text=textRef.current.value;\r\n        const date=dateRef.current.value;\r\n        const db=getFirestore();\r\n        const todoItem=collection(db,\"todo\",\"team\",userTodo)\r\n        try{\r\n            const docRef=await addDoc(todoItem,{\r\n                todoTitle:title,\r\n                todoText:text,\r\n                todoDueDate:date,\r\n                todoDone:false,\r\n            })\r\n            console.log(docRef)\r\n        }catch{\r\n\r\n        }\r\n        setSuccess(\"Todo Set Successfull\")\r\n        setTimeout(()=>setSuccess(\"\"),2000)\r\n       e.target.reset()\r\n    }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Card className=\"set-todo-card\">\r\n                {error&& <Alert variant=\"danger\">{error}</Alert>}\r\n                {success&&<Alert variant=\"success\">{success}</Alert>}\r\n                <Form onSubmit={SetTodoItem}>\r\n                    <Form.Group>\r\n                        <Form.Label>Destinated User</Form.Label>\r\n                        <Form.Select onChange={(e)=>setUserTodo(e.target.value)}>\r\n                        <option value=\"null\">Select User </option>\r\n                    {users.map((user) =>{\r\n                        return <option key={user.id} value={user.id}>{user.name}\r\n                        </option>})}\r\n                   \r\n                      \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Todo Title</Form.Label>\r\n                        <Form.Control type=\"text\" ref={titleRef} placeholder=\"Title\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Todo Description</Form.Label>\r\n                        <Form.Control type=\"text\" ref={textRef} placeholder=\"Description\" required/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Due Date</Form.Label>\r\n                        <Form.Control type=\"date\" required ref={dateRef}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Set Todo</Button>\r\n                </Form>\r\n                \r\n                \r\n            </Card>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './AdminTodoViewer.css'\r\nimport { doc, deleteDoc, getFirestore } from \"firebase/firestore\";\r\nimport { MdDeleteOutline } from 'react-icons/md'\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport default function AdminTodoViewer({ data, user }) {\r\n    const [dataProp, setDataProp] = useState([])\r\n    console.log(dataProp)\r\n    const [id, setId] = useState()\r\n    console.log(id)\r\n    console.log(user)\r\n\r\n\r\n    function handelChange(id) {\r\n        const newData = [...data];\r\n        const todo = newData.find(todo => todo.id === id)\r\n        todo.todoDone = !todo.todoDone\r\n        setDataProp(newData)\r\n        //setId(id)\r\n        console.log(newData)\r\n    }\r\n\r\n    async function DeleteTodo(e) {\r\n        const db = getFirestore()\r\n        await deleteDoc(doc(db, \"todo\", \"team\", user, e))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataProp(data)\r\n    }, [data])\r\n\r\n    if (dataProp === null) {\r\n        return (\r\n            <div>\r\n                <Alert variant=\"info\">NO Todo's</Alert>\r\n            </div>\r\n        )\r\n    } else {\r\n\r\n        return (\r\n            <div className=\"todos-container\">\r\n\r\n\r\n\r\n                {dataProp.map((data) => {\r\n                    if (data === null) {\r\n                        return <div className=\"todo-empty\">\r\n                            <Alert variant=\"warning\" className=\"todo-alert\">NO Todo's</Alert>\r\n                        </div>\r\n\r\n\r\n                    } else {\r\n                        return <div className=\"view-todo\" key={data.id}>\r\n\r\n                            <h1>{data.todoTitle}</h1>\r\n                            <h3>{data.todoText}</h3>\r\n                            <p className=\"check-label\">Due Date {data.todoDueDate}</p>\r\n                            <label className=\"check-label\" htmlFor=\"todo\">Status</label>\r\n                            <input className=\"check-box\" type=\"checkbox\" name={data.id} id={data.id} checked={data.todoDone} onChange={(e) => handelChange(e.target.id)} />\r\n                            <br />\r\n                            <button className=\"btn btn-danger btn-del\" id={data.id} onClick={(e) => DeleteTodo(e.target.id)}><MdDeleteOutline className=\"delete\" />Delete Todo</button>\r\n\r\n                        </div>\r\n\r\n                    }\r\n                })}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form,Button,Card} from 'react-bootstrap'\r\nimport {  addDoc, collection,getFirestore  } from 'firebase/firestore'\r\nimport './SetProject.css'\r\n\r\n\r\nexport default function SetProject({users}) {\r\n    const projectRef=useRef()\r\n    const [targetUser,setTargetUser]=useState()\r\n    console.log(targetUser)\r\n\r\n    async function openProject(e){\r\n       e.preventDefault()\r\n        const db=getFirestore()\r\n        const projectName=projectRef.current.value;\r\n        const project=collection(db,\"project\",\"team\",targetUser)\r\n        const projectLister=collection(db,\"project-list\")\r\n        try{\r\n            const docRef=await addDoc(project,{\r\n                projectName:projectName\r\n            })\r\n            const docRef1=await addDoc(projectLister,{\r\n                project:projectName\r\n            })\r\n            console.log(docRef)\r\n        }catch{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"setproject-card\">\r\n                <Form className=\"setproject-form\" onSubmit={(e)=>openProject(e)}>\r\n                    <Form.Group>\r\n                        <Form.Label>Select User</Form.Label>\r\n                        <Form.Select required  onChange={(e)=>setTargetUser(e.target.value) }>\r\n                            <option value=\"\">User</option>\r\n                            {users.map((item)=>{\r\n                                return <option key={item.id} value={item.id}>{item.name}</option>\r\n                            })}\r\n                        </Form.Select>\r\n                        \r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Enter Project Name</Form.Label>\r\n                        <Form.Control placeholder=\"Project Name\" required ref={projectRef}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Open Project</Button>\r\n                </Form>\r\n\r\n            </Card>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Form, Button,Alert } from 'react-bootstrap'\r\nimport { collection, query, addDoc, getDocs, getFirestore } from 'firebase/firestore'\r\nimport { getAuth ,onAuthStateChanged} from '@firebase/auth'\r\nimport './ExpencesInputer.css'\r\n\r\nconst db=getFirestore()\r\n\r\nvar name=sessionStorage.getItem(\"username\")\r\nvar userName ;\r\nconst auth = getAuth();\r\nonAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/firebase.User\r\n        userName = user.email;\r\n        // ...\r\n    } else {\r\n        // User is signed out\r\n        // ...\r\n    }\r\n});\r\n\r\n\r\nasync function getProjects(){\r\n    \r\n    const q = query(collection(db,\"project/team\",userName));\r\n    let arr=[]\r\n    const querySnapshot = await getDocs(q);\r\n    if (querySnapshot.empty !== true) {\r\n\r\n        querySnapshot.forEach((doc) => {\r\n            // doc.data() is never undefined for query doc snapshots\r\n            console.log(doc.id, \" => \", doc.data());\r\n            arr.push({ id: doc.id, project: doc.data().projectName })\r\n            console.log(arr)\r\n\r\n\r\n\r\n\r\n\r\n        })\r\n    } else {\r\n\r\n        arr.push({ id: 1, project: \"No available Project\" })\r\n\r\n        console.log(arr)\r\n    }\r\n\r\n\r\n\r\n    return arr;\r\n\r\n}\r\n\r\n\r\n\r\nexport default function ExpencesInputer() {\r\n    const expenceOptions = [\r\n        { id: 1, type: \"Hotel\" },\r\n        { id: 2, type: \"Fuel\" },\r\n        { id: 3, type: \"City Tax\" },\r\n        { id: 4, type: \"Flight Ticket\" },\r\n        { id: 5, type: \"Public transport Ticket\" },\r\n        { id: 6, type: \"Parking\" },\r\n        { id: 7, type: \"Car Service\" },\r\n        { id: 8, type: \"Toll|Road Tax\" },\r\n        { id: 9, type: \"Daily Allowance\" }\r\n    ];\r\n\r\n    const monthOptions = [\r\n        { id: 1, month: \"January\" },\r\n        { id: 2, month: \"February\" },\r\n        { id: 3, month: \"March\" },\r\n        { id: 4, month: \"April\" },\r\n        { id: 5, month: \"May\" },\r\n        { id: 6, month: \"June\" },\r\n        { id: 7, month: \"July\" },\r\n        { id: 8, month: \"August\" },\r\n        { id: 9, month: \"September\" },\r\n        { id: 10, month: \"October\" },\r\n        { id: 11, month: \"November\" },\r\n        { id: 12, month: \"December\" }\r\n    ];\r\n\r\n    const[selectedMonth,setSelectedMonth]=useState(null)\r\n    const[selectedType,setSelectedType]=useState(null)\r\n    const[selectedDate,setSelectedDate]=useState()\r\n    \r\n    const[docIssuer,setDocIssuer]=useState()\r\n    const[docNumber,setDocNumber]=useState()\r\n    const[selectedProject,setSelectedProject]=useState(null)\r\n    const[projectList,setProjectList]=useState([])\r\n    const [expenceValue,setExpenceValue]=useState()\r\n    const[error,setError]=useState(\"\")\r\n    const[success,setSucces]=useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        getProjects()\r\n        .then((arr)=>setProjectList(arr))\r\n    },[])\r\n    \r\n    async function setExpences(e){\r\n        e.preventDefault()\r\n\r\n       \r\n\r\n      \r\n        if(selectedProject===\"No available Project\"||selectedProject===null){\r\n             setError(\"No Project No Expences\")\r\n           setTimeout(()=> setError(\"\"),1800);\r\n            return\r\n        }else if(selectedMonth===null){\r\n            setError(\"No Month Selected\")\r\n            setTimeout(()=>setError(\"\"),1800)\r\n            return\r\n           \r\n        }else{ \r\n            const myExpences=collection(db,\"expences\",selectedMonth,userName)\r\n            const projectExpences=collection(db,\"project-expences/management\",selectedProject)\r\n       \r\n            try{\r\n\r\n                const docRef1=await addDoc(myExpences,{\r\n                    date:selectedDate,\r\n                    month:selectedMonth,\r\n                    expenceType:selectedType,\r\n                    docIssuer:docIssuer,\r\n                    docNumber:docNumber,\r\n                    value:Number(expenceValue),\r\n                    project:selectedProject\r\n\r\n\r\n                })\r\n                console.log(docRef1)\r\n                const docRef2=await addDoc(projectExpences,{\r\n                    date:selectedDate,\r\n                    month:selectedMonth,\r\n                    expenceType:selectedType,\r\n                    docIssuer:docIssuer,\r\n                    docNumber:docNumber,\r\n                    value:Number(expenceValue),\r\n                    employee:name\r\n                })\r\n                console.log(docRef2)\r\n\r\n                \r\n\r\n            }catch{\r\n                \r\n            }\r\n\r\n        } \r\n        setSelectedMonth(null)\r\n        setSelectedProject(null)\r\n           \r\n        setSucces(\"Data successfully saved\")\r\n        setTimeout(()=>setSucces(\"\"),1800)\r\n        e.target.reset()\r\n    }\r\n    \r\n   \r\n    \r\n    \r\n    return (\r\n        <div className=\"expence-inputer-container container-fluid\">\r\n            <Card className=\"expence-inputer-card\" >\r\n                { error&&  <Alert variant=\"danger\">{error}</Alert>}\r\n                { success&&<Alert variant=\"success\">{success}</Alert>}\r\n                <Form onSubmit={(e)=>setExpences(e)} className=\"expences-inputer-form\">\r\n                    <Form.Group>\r\n                        <Form.Label>Choose Month</Form.Label>\r\n                        <Form.Select required onChange={(e)=>setSelectedMonth(e.target.value)}>\r\n                            <option value=\"null\">Select Month</option>\r\n                        {monthOptions.map((item)=>{\r\n                            return <option key={item.id} value={item.month}>{item.month}</option>\r\n                        })}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Choose Project</Form.Label>\r\n                        <Form.Select required onChange={(e)=>setSelectedProject(e.target.value)} placeholder=\"Choose a Project\">\r\n                            <option value=\"No available Project\">No available Project</option>\r\n                        {projectList.map((item)=>{\r\n                            return <option key={item.id} value={item.project}>{item.project}</option>\r\n                        })}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                        <Form.Label>Choose Date</Form.Label>\r\n                        <Form.Control type=\"date\" required  onChange={(e)=>setSelectedDate(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Expence Type</Form.Label>\r\n                        <Form.Select required onChange={(e)=>setSelectedType(e.target.value)}>\r\n                            <option value=\"null\">Select Expence Type</option>\r\n                            {expenceOptions.map((item)=>{\r\n                                return <option key={item.id} value={item.type}>{item.type}</option>\r\n                            })}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Document Issuer</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"EX..Hotels.com\" onChange={(e)=>setDocIssuer(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Document Number</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"EX..BF.198627/2021\" onChange={(e)=>setDocNumber(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Expence Value</Form.Label>\r\n                        <Form.Control type=\"number\" step=\"0.01\" placeholder=\"Sum of the Expence\" onChange={(e)=>setExpenceValue(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Save Data</Button>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Card } from 'react-bootstrap'\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { getAuth, updateProfile } from \"firebase/auth\";\r\nimport CardHeader from 'react-bootstrap/esm/CardHeader';\r\nimport './UserProfile.css'\r\n\r\n\r\nexport default function UserProfile({ close }) {\r\n\r\n    const [file, setFile] = useState(null)\r\n    const [imgUrl, setImgUrl] = useState(\"\")\r\n\r\n    console.log(file)\r\n    const handleChange = e => {\r\n        if (e.target.files[0]) {\r\n            setFile(e.target.files[0]);\r\n        }\r\n        console.log(file)\r\n    };\r\n\r\n    function addImage() {\r\n        const storage = getStorage();\r\n        const storageRef = ref(storage, file.name);\r\n\r\n        const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n        // Register three observers:\r\n        // 1. 'state_changed' observer, called any time the state changes\r\n        // 2. Error observer, called on failure\r\n        // 3. Completion observer, called on successful completion\r\n        uploadTask.on('state_changed',\r\n            (snapshot) => {\r\n                // Observe state change events such as progress, pause, and resume\r\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                console.log('Upload is ' + progress + '% done');\r\n                switch (snapshot.state) {\r\n                    case 'paused':\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                    case 'running':\r\n                        console.log('Upload is running');\r\n                        break;\r\n                }\r\n            },\r\n            (error) => {\r\n                // Handle unsuccessful uploads\r\n            },\r\n            () => {\r\n                // Handle successful uploads on complete\r\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                    console.log('File available at', downloadURL);\r\n                    setImgUrl(downloadURL)\r\n                });\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    async function saveChanges(){\r\n        const auth = getAuth();\r\nupdateProfile(auth.currentUser, {\r\n   photoURL: imgUrl\r\n}).then(() => {\r\n  // Profile updated!\r\n  // ...\r\n}).catch((error) => {\r\n  // An error occurred\r\n  // ...\r\n});\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Card>\r\n            <CardHeader className=\"user-profile\"><h3>Update Your Profile Information <button className=\"close\" onClick={close}>X</button></h3>\r\n            </CardHeader>\r\n\r\n                 <Form onSubmit={saveChanges}>\r\n                    <Form.Group>\r\n                        <Form.Label>Add a profile Image</Form.Label>\r\n                        <Form.Control type=\"file\" accept=\".png,.jpg,.jpeg\" onChange={handleChange} />\r\n                        <Button onClick={addImage}>Add Image to Profile</Button>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Save Changes</Button>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { getFirestore, getDocs, collection, } from '@firebase/firestore'\r\nimport { getAuth } from '@firebase/auth'\r\nimport { Form, Card, Button, Table } from 'react-bootstrap'\r\nimport './ExpencesRenderer.css'\r\n\r\n\r\n\r\nconst db = getFirestore()\r\nlet name;\r\nlet userEmail;\r\n\r\nexport default function ExpencesRenderer() {\r\n\r\n    const monthOptions = [\r\n        { id: 1, month: \"January\" },\r\n        { id: 2, month: \"February\" },\r\n        { id: 3, month: \"March\" },\r\n        { id: 4, month: \"April\" },\r\n        { id: 5, month: \"May\" },\r\n        { id: 6, month: \"June\" },\r\n        { id: 7, month: \"July\" },\r\n        { id: 8, month: \"August\" },\r\n        { id: 9, month: \"September\" },\r\n        { id: 10, month: \"October\" },\r\n        { id: 11, month: \"November\" },\r\n        { id: 12, month: \"December\" }\r\n    ]\r\n\r\n\r\n\r\n    const [selectedMonth, setSelectedMonth] = useState()\r\n    const [expences, setExpences] = useState([])\r\n    const [showTable, setShowTable] = useState(false)\r\n    const [totalExpences, setTotalExpences] = useState()\r\n\r\n\r\n    async function GetExpences(e) {\r\n        e.preventDefault();\r\n\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n\r\n        if (user) {\r\n            userEmail= user.email;\r\n            name=user.displayName;\r\n            // User is signed in, see docs for a list of available properties\r\n            // https://firebase.google.com/docs/reference/js/firebase.User\r\n            // ...\r\n        } else {\r\n            // No user is signed in.\r\n        }\r\n\r\n        const querySnapshot = await getDocs(collection(db, \"expences\", selectedMonth, userEmail));\r\n        let total = []\r\n        let arr = [];\r\n        let totalNumber = []\r\n        if (querySnapshot.empty !== true) {\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                console.log(doc.id, \" => \", doc.data());\r\n                arr.push({ id: doc.id, project: doc.data().project, month: doc.data().month, date: doc.data().date, issuer: doc.data().docIssuer, number: doc.data().docNumber, type: doc.data().expenceType, value: doc.data().value })\r\n                console.log(arr)\r\n\r\n                setExpences(arr)\r\n                \r\n               \r\n\r\n\r\n\r\n\r\n                console.log(total)\r\n                console.log(totalNumber)\r\n                total.map((item) => item)\r\n                let sum = 0;\r\n\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    sum += arr[i].value;\r\n                }\r\n                console.log(sum);\r\n                setTotalExpences(sum)\r\n\r\n\r\n            })\r\n\r\n        } else {\r\n\r\n            arr.push({ id: 1, project: \"No available Project\", month: selectedMonth, date: \"no information\", issuer: \"no information\", number: \"no information\", type: \"no information\", value: 0 })\r\n            setTotalExpences(0)\r\n            setExpences(arr)\r\n            console.log(arr)\r\n        }\r\n\r\n        setShowTable(true)\r\n\r\n        return arr;\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid renderer\" >\r\n                <Card className=\"workingtime-requester\">\r\n                    <Form onSubmit={(e) => GetExpences(e)} className=\"workingtime-requester-form\">\r\n                        <Form.Label>Select Month</Form.Label>\r\n                        <Form.Select onChange={(e) => setSelectedMonth(e.target.value)} required>\r\n                            <option value=\"\">Select Month</option>\r\n                            {monthOptions.map((item) => {\r\n                                return <option key={item.id} value={item.month}>{item.month}</option>\r\n                            })}\r\n                        </Form.Select>\r\n                        <Button type=\"submit\">Show Data</Button>\r\n                    </Form>\r\n                </Card>\r\n\r\n                {showTable && <Table bordered >\r\n\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{userEmail}</th>\r\n                            <th>{selectedMonth}</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Month</th>\r\n                            <th>Date</th>\r\n                            <th>Project</th>\r\n                            <th>Document Issuer</th>\r\n                            <th>Document Number</th>\r\n                            <th>Expence Type</th>\r\n                            <th>Expence Value</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        {expences.map((item) =>{\r\n                            if(item.type===\"Hotel\"&&item.value>=150){\r\n                            return<tr key={item.id} >\r\n                                <td>{item.month}</td>\r\n                                <td>{item.date}</td>\r\n                                <td>{item.project}</td>\r\n                                <td>{item.issuer}</td>\r\n                                <td>{item.number}</td>\r\n                                <td>{item.type}</td>\r\n                                <td className=\"bg-danger\">{item.value}</td>\r\n                            </tr>\r\n                            }else{\r\n                                return<tr key={item.id} >\r\n                                <td>{item.month}</td>\r\n                                <td>{item.date}</td>\r\n                                <td>{item.project}</td>\r\n                                <td>{item.issuer}</td>\r\n                                <td>{item.number}</td>\r\n                                <td>{item.type}</td>\r\n                                <td>{item.value}</td>\r\n                            </tr>\r\n                            }\r\n                        })}\r\n                    </tbody>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{name}</th>\r\n                            <th>Total Expences for {selectedMonth}</th>\r\n                            <th>{totalExpences}</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                </Table>}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col,Form,Button} from 'react-bootstrap'\r\nimport WorkTimeImputer from '../WorkTimeImputer'\r\nimport { collection, query, where, getDocs, getFirestore } from 'firebase/firestore'\r\nimport MonthRequestWorkingTime from '../MonthRequestWorkingTime'\r\nimport {  Card } from \"react-bootstrap\"\r\nimport Nav from '../Nav'\r\nimport WorkTimeRenderer from '../WorkTimeRenderer/WorkTimeRenderer';\r\nimport './AdminDashboard.css'\r\nimport SetTodos from '../SetTodos/SetTodos'\r\nimport Logo from '../../images/logo.png'\r\nimport AdminTodoViewer from '../AdminTodoViewer'\r\nimport SetProject from'../SetProject'\r\nimport {BsArrowReturnRight ,BsArrowBarUp} from 'react-icons/bs'\r\nimport {AiOutlineCloseCircle}from 'react-icons/ai'\r\nimport {FaBusinessTime} from 'react-icons/fa'\r\nimport{GiMoneyStack} from 'react-icons/gi'\r\nimport {FcTodoList} from 'react-icons/fc'\r\nimport {GrUserSettings} from 'react-icons/gr'\r\nimport ExpencesInputer from '../ExpencesInputer/ExpencesInputer'\r\nimport UserProfile from '../UserProfile/UserProfile'\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport ExpencesRenderer from '../ExpencesRenderer/ExpencesRenderer'\r\n\r\n\r\nlet email;\r\nlet uid;\r\nlet name;\r\nasync function getUsers() {\r\n  \r\n\r\nconst auth = getAuth();\r\n\r\nonAuthStateChanged(auth, (user) => {\r\n  if (user) {\r\n    // User is signed in, see docs for a list of available properties\r\n    // https://firebase.google.com/docs/reference/js/firebase.User\r\n    uid = user.uid;\r\n    email=user.email\r\n    name=user.displayName\r\n    // ...\r\n  } else {\r\n    // User is signed out\r\n    // ...\r\n  }\r\n});\r\n    const db = getFirestore();\r\n    const q = query(collection(db, \"users\"));\r\n    let arr=[]\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n        // doc.data() is never undefined for query doc snapshots\r\n        \r\n\r\n        console.log(doc.id, \" => \", doc.data());\r\n        arr.push({name: doc.data().name, id:doc.data().email})\r\n\r\n        \r\n    });\r\n    return arr;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AdminDashboard() {\r\n    const months=[{id:1,name:\"January\"},{id:2,name:\"February\"},{id:3,name:\"March\"},{id:4,name:\"April\"},{id:5,name:\"May\"},{id:6,name:\"June\"},{id:7,name:\"July\"},{id:8,name:\"August\"},{id:9,name:\"September\"},{id:10,name:\"October\"},{id:11,name:\"November\"},{id:12,name:\"December\"}]\r\n    const[showHours,setShowHours]=useState(false)\r\n    const[showSetTodos,setShowSetTodos]=useState(false)\r\n    console.log(showHours)\r\n    const[showExpences,setShowExpences]=useState(false)\r\n    const [otherUsersWorkingHours,setOtherUsersWorkingHours]=useState(false)\r\n    const [users,setUsers]=useState([]);\r\n    console.log(users)\r\n    const [month,setMonth]=useState(null)\r\n    const [user,setUser]=useState(null)\r\n    const[showProfile,setShowProfile]=useState(false)\r\n   \r\n    console.log(user)\r\n    console.log(month)\r\n    const [dataHours, setDataHours] = useState([])\r\n    console.log(dataHours)\r\n    const [time, setTime] = useState([])\r\n    const [showTodoViewer,setShowTodoViewer]=useState(false)\r\n    const [todo,setTodo]=useState([])\r\n    console.log(todo)\r\n    const [userTodo,setUserTodo]=useState()\r\n    console.log(userTodo)\r\n    const [showSetProject,setShowSetProject]=useState(false)\r\n    console.log(showSetProject)\r\n    const[showTableWorkingHours,setShowTableWorkingHors]=useState(false)\r\n    const[showImputer,setShowImputer]=useState(false)\r\n    const[showExpencesTable,setShowExpencesTable]=useState(false)\r\n    const[showExpencesInputer,setShowExpencesInputer]=useState(false)\r\n    const[showExpencesSorter,setShowExpencesSorter]=useState(false)\r\n\r\n\r\n    useEffect(()=>{\r\n        getUsers()\r\n        .then((arr)=>{\r\n            setUsers(arr)\r\n            \r\n        })\r\n\r\n    },[])\r\n   \r\n    async function ShowData(e) {\r\n       e.preventDefault()\r\n        const db = getFirestore();\r\n\r\n        if(month===null||user===null){\r\n            return\r\n        }else{\r\n        const querySnapshot = await getDocs(collection(db, \"working-hours\", month, user));\r\n        console.log(querySnapshot)\r\n        let arr = [];\r\n        let times = [];\r\n\r\n        if (querySnapshot.empty!==true){\r\n        \r\n        querySnapshot.forEach((doc) => {\r\n            // doc.data() is never undefined for query doc snapshots\r\n            console.log(doc.id, \" => \", doc.data());\r\n            arr.push({ id: doc.id, time: doc.data().time, date:doc.data().date, project:doc.data().project })\r\n            console.log(arr)\r\n          \r\n            times.push(parseInt(Object.values(doc.data().time)))\r\n            times.map((item)=>item)\r\n            let sum = 0;\r\n           \r\n            for (let i = 0; i < times.length; i++) {\r\n                sum += times[i];\r\n            }\r\n            console.log(sum);\r\n            setTime(sum)\r\n            setDataHours(arr)\r\n            console.log(arr)\r\n            \r\n            \r\n           \r\n\r\n        })}else{\r\n            setTime(0)\r\n            arr.push({ id:1,date:month,project:{project:\"no info\"},time:{time:\"no data available\"}})\r\n            setDataHours(arr)\r\n            console.log(arr)\r\n        }\r\n       \r\n    }\r\n     e.target.reset()   \r\n        \r\n\r\n\r\n    }\r\n\r\n    async function GetTodoStatus(){\r\n        const db=getFirestore()\r\n        const querySnapshot = await getDocs(collection(db, \"todo\",\"team\", userTodo));\r\n        console.log(querySnapshot)\r\n        let arr=[]\r\n        if (querySnapshot.empty!==true){\r\n            \r\n            querySnapshot.forEach((doc) => {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                console.log(doc.id, \" => \", doc.data());\r\n                arr.push({ id: doc.id, todoDone: doc.data().todoDone, todoDueDate:doc.data().todoDueDate, todoText:doc.data().todoText,todoTitle:doc.data().todoTitle })\r\n                console.log(arr)\r\n              \r\n               \r\n               \r\n                \r\n                \r\n                \r\n                \r\n                console.log(arr)\r\n                \r\n                \r\n               \r\n    \r\n            })}else{\r\n               \r\n                arr.push(null)\r\n                setTodo(arr)\r\n                console.log(arr)\r\n            }\r\n           \r\n            \r\n            setTodo(arr)\r\n            \r\n    \r\n    }\r\n\r\n    function handelShowHours(){\r\n        setShowHours(!showHours)\r\n        setShowExpences(false)\r\n        setOtherUsersWorkingHours(false)\r\n        setShowSetTodos(false)\r\n        setShowSetProject(false)\r\n        setShowTodoViewer(false)\r\n        setShowExpencesInputer(false)\r\n        setShowExpencesTable(false)\r\n        setShowProfile(false)\r\n        \r\n    }\r\n\r\n    function handelShowExpences() {\r\n        setShowHours(false);\r\n        setShowExpences(!showExpences)\r\n        setShowSetTodos(false);\r\n        setOtherUsersWorkingHours(false)\r\n        setShowTodoViewer(false)\r\n        setShowSetProject(false)\r\n        \r\n    }\r\n\r\n    function handelOtherUsersWorkingHours(){\r\n        setOtherUsersWorkingHours(!otherUsersWorkingHours)\r\n        setShowHours(false);\r\n        setShowExpences(false);\r\n        setShowSetTodos(false);\r\n        setShowSetProject(false)\r\n        setShowTodoViewer(false)\r\n        setShowExpencesInputer(false)\r\n        setShowExpencesTable(false)\r\n        setShowProfile(false)\r\n    }\r\n    function handelShowSetTodos(){\r\n        setShowSetTodos(!showSetTodos);\r\n        setOtherUsersWorkingHours(false)\r\n        setShowHours(false);\r\n        setShowExpences(false);\r\n        setShowTodoViewer(false)\r\n        setShowSetProject(false)\r\n        setShowProfile(false)\r\n    }\r\n\r\n    function handelShowTodoViewer(){\r\n        setShowTodoViewer(!showTodoViewer)\r\n        setShowSetTodos(false);\r\n        setOtherUsersWorkingHours(false)\r\n        setShowHours(false);\r\n        setShowExpences(false);\r\n        setShowSetProject(false)\r\n        setShowProfile(false)\r\n    }\r\n   \r\n    function handelShowSetProject(){\r\n        setShowSetProject(!showSetProject)\r\n        setShowTodoViewer(false)\r\n        setShowSetTodos(false);\r\n        setOtherUsersWorkingHours(false)\r\n        setShowHours(false);\r\n        setShowExpences(false);\r\n        setShowProfile(false)\r\n    }\r\n    function handelShowTableWorkingHours(){\r\n        setShowTableWorkingHors(!showTableWorkingHours)\r\n        setShowImputer(false)\r\n    }\r\n    \r\n    function handelshowImputer(){\r\n        setShowImputer(!showImputer)\r\n        setShowTableWorkingHors(false)\r\n    }\r\n\r\n    function handelHideWorkingTime(){\r\n        setShowImputer(false)\r\n        setShowTableWorkingHors(false)\r\n        setShowHours(false)\r\n    }\r\n\r\n    function handelHideExpences(){\r\n        setShowExpencesTable(false)\r\n        setShowExpencesInputer(false)\r\n        setShowExpences(false)\r\n\r\n        \r\n    }\r\n\r\n    function handelShowTableExpences(){\r\n        setShowExpencesTable(!showExpencesTable)\r\n        setShowExpencesInputer(false)\r\n    }\r\n    function handelShowExpencesInputer(){\r\n        setShowExpencesInputer(!showExpencesInputer)\r\n        setShowExpencesTable(false)\r\n        setShowImputer(false)\r\n        setShowTableWorkingHors(false)\r\n        setShowHours(false)\r\n        setShowProfile(false)\r\n    }\r\n\r\n    function handelExpenceSorterShow(){\r\n        setShowExpencesSorter(!showExpencesSorter)\r\n        setShowExpencesInputer(false)\r\n        setShowProfile(false)\r\n        setShowSetProject(false)\r\n        setShowTodoViewer(false)\r\n        setShowSetTodos(false);\r\n        setOtherUsersWorkingHours(false)\r\n        setShowHours(false);\r\n        setShowImputer(false)\r\n        setShowTableWorkingHors(false)\r\n        setShowHours(false)\r\n        \r\n    }\r\n\r\n    function handelShowProfile(){\r\n        setShowProfile(!showProfile)\r\n        setShowSetProject(false)\r\n        setShowTodoViewer(false)\r\n        setShowSetTodos(false);\r\n        setOtherUsersWorkingHours(false)\r\n        setShowHours(false);\r\n        setShowExpences(false);\r\n        setShowImputer(false);\r\n        setShowTableWorkingHors(false)\r\n        setShowExpencesInputer(false)\r\n\r\n    }\r\n\r\n    function handelCloseProfile(){\r\n        setShowProfile(false)\r\n    }\r\n    function handelCloseOtherUsersWorkingHours(){\r\n        setOtherUsersWorkingHours(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"dashoard\" style={{backgroundImage:Logo,backgroundSize:\"cover\"}}>\r\n            <Row >\r\n                <Nav />\r\n                <Col sm={2}>\r\n                    <button className=\"btn btn-primary\" onClick={handelShowProfile}> Update Profile</button>\r\n                    <button className=\"btn btn-primary\"  onClick={handelShowHours}><FaBusinessTime className=\"hours-icon\"/> My Working Hours</button>\r\n                    {showHours&&  <div><BsArrowReturnRight className=\"arrow-right\" /><Button className=\"btn btn-secondary\" onClick={handelShowTableWorkingHours}>View Working Hours</Button></div>}\r\n                    {showHours&&  <div><BsArrowReturnRight className=\"arrow-right\"/><Button className=\"btn btn-secondary\" onClick={handelshowImputer}>Add working Hours</Button></div>}\r\n                    {showHours&&  <div><BsArrowBarUp className=\"arrow-right\"/> <AiOutlineCloseCircle onClick={handelHideWorkingTime} className=\"close-btn\"/></div> }\r\n                    <button className=\"btn btn-primary\" onClick={handelShowExpences}><GiMoneyStack className=\"expences-icon\"/>My expences</button>\r\n                    {showExpences&&<div><BsArrowReturnRight className=\"arrow-right\" /><Button className=\"btn btn-secondary\" onClick={handelExpenceSorterShow}>View Expences</Button></div>}\r\n                    {showExpences&&<div><BsArrowReturnRight className=\"arrow-right\" /><Button className=\"btn btn-secondary\" onClick={handelShowExpencesInputer}>Add expences</Button></div>}\r\n                    {showExpences&&  <div><BsArrowBarUp className=\"arrow-right\"/> <AiOutlineCloseCircle onClick={handelHideExpences} className=\"close-btn\"/></div> }\r\n                    <button className=\"btn btn-info\" onClick={handelOtherUsersWorkingHours}><FaBusinessTime className=\"hours-icon\"/>Other Users Working Hours</button>\r\n                    {otherUsersWorkingHours&&<Card className=\"admin-card\">\r\n                        <Card.Body>\r\n                        <Form className=\"working-form\" onSubmit={(e)=>ShowData(e)}>\r\n                            <Form.Group>\r\n                        <Form.Label>Select User</Form.Label>\r\n                        <br />\r\n                        <Form.Select onChange={(e)=>setUser(e.target.value)} required >\r\n                        \r\n                            <option value=\"\">User</option>\r\n                            {users.map((use)=>{\r\n                                return <option key={use.name} id={use.name} value={use.id} >{use.name}</option>\r\n                                \r\n                            })}\r\n                            \r\n                            </Form.Select>    \r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group>\r\n                            <Form.Label>Select Month</Form.Label>\r\n                            <Form.Select onChange={(e)=>setMonth(e.target.value)} required  >\r\n                                <option value=\"\">Month</option>\r\n                            {months.map((mon)=>{\r\n                                return <option key={mon.id} value={mon.name}>{mon.name}</option>\r\n                            })}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                       \r\n                        <br />\r\n                        <Button type=\"submit\">Get Data</Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                    </Card>}\r\n                    <button className=\"btn btn-info\" type=\"submit\" onClick={handelShowSetTodos}><FcTodoList className=\"todo-viewer-icon\"/>Set Todos</button>\r\n                    <br />\r\n                    <button className=\"btn btn-info\" onClick={handelShowTodoViewer}><FcTodoList className=\"todo-viewer-icon\"/>View Todo Status</button>\r\n                    {showTodoViewer&& <Card className=\"todo-card-inputer\">\r\n                        <Card.Body>\r\n                            <label htmlFor=\"User\" >Select User</label>\r\n                            <br />\r\n                            <select name=\"user\" id=\"user\" className=\"user-todo\" onChange={(e)=>setUserTodo(e.target.value)}>\r\n                                <option value=\"none\">Select User</option>\r\n                            {users.map((use)=>{\r\n                                return <option key={use.name} id={use.name} value={use.id} >{use.name}</option>\r\n                                \r\n                            })}\r\n                            </select>\r\n                            <br />\r\n                            <button className=\"btn btn-secondary\" onClick={GetTodoStatus}>Get Todos</button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    }\r\n                    <Button onClick={handelShowSetProject}><GrUserSettings className=\"project-icon\"/>Open Project</Button>\r\n                </Col>\r\n                <Col sm={10}>\r\n                  {showTableWorkingHours &&  <WorkTimeRenderer/>}\r\n                  {showImputer && <WorkTimeImputer/>}\r\n                  {otherUsersWorkingHours&& <MonthRequestWorkingTime data={dataHours} time={time} month={month} close={handelCloseOtherUsersWorkingHours}/> }\r\n                  {showProfile&&<UserProfile close={handelCloseProfile}/>}\r\n                  {showSetTodos&&<SetTodos users={users}/>}\r\n                  {showTodoViewer&&<AdminTodoViewer data={todo} user={userTodo}/>}\r\n                  {showSetProject&&<SetProject users={users}/>}\r\n                  {showExpencesInputer&& <ExpencesInputer/> }\r\n                  {showExpencesTable&& <ExpencesRenderer name={name}/> }\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport { doc, updateDoc, getFirestore } from \"firebase/firestore\";\r\nimport './UserTodoViewer.css'\r\n\r\n\r\n\r\n\r\n\r\nexport default function UserTodoViewer({ todos,userName }) {\r\n\r\n    const [todoList, setTodoList] = useState([])\r\n    const [id, setId] = useState()\r\n    const [done,setDone]=useState()\r\n    console.log(id)\r\n    console.log(todoList)\r\n\r\n\r\n    function handelChange(id) {\r\n        const newData = [...todos];\r\n        const todo = newData.find(todo => todo.id === id)\r\n        todo.done = !todo.done\r\n        setTodoList(newData)\r\n        setId(todo.id)\r\n        setDone(todo.done)\r\n        \r\n        //setId(id)\r\n        console.log(newData)\r\n    }\r\n    useEffect(() => {\r\n        setTodoList(todos)\r\n    }, [todos])\r\n\r\n    async function updateTodo(id) {\r\n        \r\n        \r\n        const db=getFirestore()\r\n        const todoRef = doc(db, \"todo/team\",userName,id);\r\n\r\n        // Set the \"capital\" field of the city 'DC'\r\n        await updateDoc(todoRef, {\r\n            todoDone:done\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"todolist-container\">\r\n            {todoList.map((item) => {\r\n                return <Card key={item.id} className=\"todo-card\">\r\n                    <Card.Header> <h1>{item.title}</h1> </Card.Header>\r\n                    <Card.Body>\r\n                        <h3>{item.text}</h3>\r\n                        <h5>{item.date}</h5>\r\n                        <input type=\"checkbox\" name=\"todo\" id={item.id} checked={item.done} onChange={(e) => handelChange(e.target.id)}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer><Button id={item.id} onClick={(e)=>updateTodo(e.target.id)}>Update</Button></Card.Footer>\r\n                </Card>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react';\r\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\r\nimport { getFirestore,getDocs,collection,query } from '@firebase/firestore'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { Row, Col ,Button} from 'react-bootstrap'\r\nimport WorkTimeImputer from '../WorkTimeImputer'\r\nimport logo from '../../images/logo.png'\r\nimport './UserDashboard.css'\r\nimport Nav from '../Nav'\r\nimport WorkTimeRenderer from '../WorkTimeRenderer/WorkTimeRenderer';\r\nimport {BsArrowReturnRight ,BsArrowBarUp} from 'react-icons/bs'\r\nimport {AiOutlineCloseCircle}from 'react-icons/ai'\r\nimport UserTodoViewer from '../UserTodoViewer/UserTodoViewer';\r\nimport ExpencesInputer from '../ExpencesInputer/ExpencesInputer';\r\nimport ExpencesRenderer from '../ExpencesRenderer/ExpencesRenderer';\r\n\r\n\r\nvar userName = sessionStorage.getItem('user')\r\nconst auth = getAuth();\r\nonAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/firebase.User\r\n        userName = user.email;\r\n        // ...\r\n    } else {\r\n        // User is signed out\r\n        // ...\r\n    }\r\n});\r\n\r\n\r\nasync function getTodos() {\r\n    const db = getFirestore();\r\n    const q = query(collection(db, \"todo/team\",userName));\r\n    let arr=[]\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n        // doc.data() is never undefined for query doc snapshots\r\n        \r\n\r\n        console.log(doc.id, \" => \", doc.data());\r\n        arr.push({id:doc.id,title:doc.data().todoTitle,text:doc.data().todoText,date:doc.data().todoDueDate,done:doc.data().todoDone})\r\n\r\n        \r\n    });\r\n    return arr;\r\n}\r\n\r\nexport default function UserDashboard() {\r\n    const[showHours,setShowHours]=useState(false)\r\n    console.log(showHours)\r\n    const[showExpences,setShowExpences]=useState(false)\r\n    const[showLogo,setShowLogo]=useState(true)\r\n    const[showTableWorkingHours,setShowTableWorkingHors]=useState(false)\r\n    const[showImputer,setShowImputer]=useState(false)\r\n    const[showTodos,setShowTodos]=useState(false)\r\n    const[todos,setTodos]=useState([])\r\n    const[showExpencesTable,setShowExpencesTable]=useState(false)\r\n    const[showExpencesInputer,setShowExpencesInputer]=useState(false)\r\n    const[showExpencesSorter,setShowExpencesSorter]=useState(false)\r\n\r\n    useEffect(()=>{\r\n        getTodos()\r\n        .then((arr)=>setTodos(arr))\r\n    },[])\r\n\r\n    function handelShowHours(){\r\n        setShowHours(!showHours)\r\n        setShowExpences(false)\r\n        setShowLogo(false)\r\n        \r\n    }\r\n\r\n    function handelShowExpences() {\r\n        setShowHours(false);\r\n        setShowExpences(!showExpences)\r\n        setShowLogo(false);\r\n        \r\n    }\r\n\r\n    function handelShowTableWorkingHours(){\r\n        setShowTableWorkingHors(!showTableWorkingHours)\r\n        setShowImputer(false)\r\n    }\r\n    \r\n    function handelshowImputer(){\r\n        setShowImputer(!showImputer)\r\n        setShowTableWorkingHors(false)\r\n    }\r\n\r\n    function handelHideWorkingTime(){\r\n        setShowImputer(false)\r\n        setShowTableWorkingHors(false)\r\n        setShowHours(false)\r\n    }\r\n\r\n    function handelViewTodos(){\r\n        setShowTodos(!showTodos)\r\n        setShowImputer(false)\r\n        setShowTableWorkingHors(false)\r\n        setShowHours(false)\r\n        setShowExpences(false)\r\n        setShowLogo(false)\r\n    }\r\n\r\n    function handelHideExpences(){\r\n        setShowExpencesTable(false)\r\n        setShowExpencesInputer(false)\r\n        setShowExpences(false)\r\n        setShowExpencesTable(false)\r\n        setShowExpencesSorter(false)\r\n\r\n        \r\n    }\r\n\r\n    function handelShowTableExpences(){\r\n        setShowExpencesTable(!showExpencesTable)\r\n        setShowExpencesInputer(false)\r\n    }\r\n    function handelShowExpencesInputer(){\r\n        setShowExpencesInputer(!showExpencesInputer)\r\n        setShowExpencesTable(false)\r\n    }\r\n    function handelExpenceSorterShow(){\r\n        setShowExpencesSorter(!showExpencesSorter)\r\n        setShowExpencesInputer(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Nav />\r\n                <Col sm={2}>\r\n                    <button className=\"btn btn-primary\"  onClick={handelShowHours}>Working Hours</button>\r\n                    {showHours&&  <div><BsArrowReturnRight className=\"arrow-right\" /><Button className=\"btn btn-secondary\" onClick={handelShowTableWorkingHours}>View Working Hours</Button></div>}\r\n                    {showHours&&  <div><BsArrowReturnRight className=\"arrow-right\"/><Button className=\"btn btn-secondary\" onClick={handelshowImputer}>Add working Hours</Button></div>}\r\n                    {showHours&&  <div><BsArrowBarUp className=\"arrow-right\"/> <AiOutlineCloseCircle onClick={handelHideWorkingTime} className=\"close-btn\"/></div> }\r\n                    <br />\r\n                    <button className=\"btn btn-primary\" onClick={handelShowExpences}>Travel Expences</button>\r\n                    {showExpences&&<div><BsArrowReturnRight className=\"arrow-right\" /><Button className=\"btn btn-secondary\" onClick={handelExpenceSorterShow}>View Expences</Button></div>}\r\n                    {showExpences&&<div><BsArrowReturnRight className=\"arrow-right\" /><Button className=\"btn btn-secondary\" onClick={handelShowExpencesInputer}>Add expences</Button></div>}\r\n                    {showExpences&&  <div><BsArrowBarUp className=\"arrow-right\"/> <AiOutlineCloseCircle onClick={handelHideExpences} className=\"close-btn\"/></div> }\r\n                    <Button onClick={handelViewTodos}>View Todos</Button>\r\n                    \r\n                </Col>\r\n                <Col sm={10}>\r\n                 {showTableWorkingHours && <WorkTimeRenderer  />}   \r\n                 {showImputer &&  <WorkTimeImputer  />}\r\n                {showExpencesInputer&& <ExpencesInputer/>}\r\n                {showExpencesSorter&&<ExpencesRenderer/>}\r\n                 {showLogo && <div className=\"container\"><img src={logo} alt=\"Logo\" /></div> }\r\n                 {showTodos&& <UserTodoViewer todos={todos} userName={userName}/>}\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\n\n\nimport Signup from '../src/components/Signup'\nimport Login from '../src/components/Login'\nimport AdminDashboard from '../src/components/AdminDashboard'\nimport UserDashboard from '../src/components/UserDasboard'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\n\n\n\n\n\n\n\n\n\n\n\nfunction App() {\n  return (\n\n    \n      <div className=\"app-container container-fluid\"> \n        <Router basename=\"/team-connect/\">\n          <Switch>\n            \n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/dashboardadmin\" component={AdminDashboard}/>\n              <Route path=\"/dashboarduser\" component={UserDashboard}/>\n              <Route path=\"/signup\" component={Signup} /> \n              \n             \n                \n                \n          </Switch>\n        </Router>\n      </div>\n    \n\n\n  )\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport './index.css';\nimport App from './App';\nimport{BrowserRouter} from 'react-router-dom'\n\n\nReactDOM.render(\n  \n    <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}